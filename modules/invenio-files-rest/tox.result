GLOB sdist-make: /code/modules/invenio-files-rest/setup.py
c1 create: /code/modules/invenio-files-rest/.tox/c1
c1 installdeps: pytest>=3, pytest-cov, -rrequirements2.txt
c1 inst: /code/modules/invenio-files-rest/.tox/.tmp/package/1/invenio-files-rest-1.0.1.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@98eb36e1dfc66256fa7ea62237e9879acb906e9d#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_deposit&subdirectory=modules/invenio-deposit,invenio-files-rest @ file:///code/modules/invenio-files-rest/.tox/.tmp/package/1/invenio-files-rest-1.0.1.zip,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_swordserver&subdirectory=modules/weko-swordserver,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='1675485294'
c1 run-test: commands[0] | pytest --cov=invenio_files_rest tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/invenio-files-rest/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/invenio-files-rest/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/invenio-files-rest, inifile:
plugins: celery-4.4.4, cov-2.9.0
collecting ... collected 152 items

tests/test_admin.py::test_require_slug PASSED                            [  0%]
tests/test_admin.py::test_admin_views ERROR                              [  1%]
tests/test_cli.py::test_simple_workflow SKIPPED                          [  1%]
tests/test_examples_app.py::test_example_app SKIPPED                     [  2%]
tests/test_helpers.py::test_make_path PASSED                             [  3%]
tests/test_invenio_files_rest.py::test_version PASSED                    [  3%]
tests/test_invenio_files_rest.py::test_init PASSED                       [  4%]
tests/test_limiters.py::test_file_size_limit_comparisons PASSED          [  5%]
tests/test_models.py::test_location ERROR                                [  5%]
tests/test_models.py::test_location_default ERROR                        [  6%]
tests/test_models.py::test_location_validation ERROR                     [  7%]
tests/test_models.py::test_bucket_removal ERROR                          [  7%]
tests/test_models.py::test_bucket_kwargs_creation ERROR                  [  8%]
tests/test_models.py::test_bucket_create_object ERROR                    [  9%]
tests/test_models.py::test_bucket_retrieval ERROR                        [  9%]
tests/test_models.py::test_object_create ERROR                           [ 10%]
tests/test_models.py::test_object_create_with_fileid ERROR               [ 11%]
tests/test_models.py::test_object_multibucket ERROR                      [ 11%]
tests/test_models.py::test_object_get_by_bucket ERROR                    [ 12%]
tests/test_models.py::test_object_delete ERROR                           [ 13%]
tests/test_models.py::test_object_remove ERROR                           [ 13%]
tests/test_models.py::test_object_remove_marker ERROR                    [ 14%]
tests/test_models.py::test_object_set_contents ERROR                     [ 15%]
tests/test_models.py::test_object_set_location ERROR                     [ 15%]
tests/test_models.py::test_object_snapshot ERROR                         [ 16%]
tests/test_models.py::test_object_snapshot_deleted ERROR                 [ 17%]
tests/test_models.py::test_bucket_sync_new_object ERROR                  [ 17%]
tests/test_models.py::test_bucket_sync_same_object ERROR                 [ 18%]
tests/test_models.py::test_bucket_sync_deleted_object ERROR              [ 19%]
tests/test_models.py::test_bucket_sync_delete_extras ERROR               [ 19%]
tests/test_models.py::test_bucket_sync ERROR                             [ 20%]
tests/test_models.py::test_bucket_sync_deleted ERROR                     [ 21%]
tests/test_models.py::test_object_copy ERROR                             [ 21%]
tests/test_models.py::test_object_set_file ERROR                         [ 22%]
tests/test_models.py::test_object_mimetype ERROR                         [ 23%]
tests/test_models.py::test_object_restore ERROR                          [ 23%]
tests/test_models.py::test_object_relink_all ERROR                       [ 24%]
tests/test_models.py::test_object_validation ERROR                       [ 25%]
tests/test_models.py::test_bucket_tags ERROR                             [ 25%]
tests/test_models.py::test_fileinstance_get ERROR                        [ 26%]
tests/test_models.py::test_fileinstance_get_by_uri ERROR                 [ 26%]
tests/test_models.py::test_fileinstance_create ERROR                     [ 27%]
tests/test_models.py::test_fileinstance_set_contents ERROR               [ 28%]
tests/test_models.py::test_fileinstance_copy_contents ERROR              [ 28%]
tests/test_models.py::test_fileinstance_copy_contents_invalid ERROR      [ 29%]
tests/test_models.py::test_fileinstance_send_file ERROR                  [ 30%]
tests/test_models.py::test_fileinstance_validation ERROR                 [ 30%]
tests/test_models.py::test_object_version_tags ERROR                     [ 31%]
tests/test_models_multipart.py::test_multipart_creation ERROR            [ 32%]
tests/test_models_multipart.py::test_multipart_last_part ERROR           [ 32%]
tests/test_models_multipart.py::test_part_creation ERROR                 [ 33%]
tests/test_models_multipart.py::test_multipart_full ERROR                [ 34%]
tests/test_request.py::test_max_content_length PASSED                    [ 34%]
tests/test_serializer.py::test_serialize_pretty ERROR                    [ 35%]
tests/test_storage.py::test_storage_interface PASSED                     [ 36%]
tests/test_storage.py::test_pyfs_initialize ERROR                        [ 36%]
tests/test_storage.py::test_pyfs_delete ERROR                            [ 37%]
tests/test_storage.py::test_pyfs_delete_fail ERROR                       [ 38%]
tests/test_storage.py::test_pyfs_save ERROR                              [ 38%]
tests/test_storage.py::test_pyfs_save_failcleanup ERROR                  [ 39%]
tests/test_storage.py::test_pyfs_save_callback ERROR                     [ 40%]
tests/test_storage.py::test_pyfs_save_limits ERROR                       [ 40%]
tests/test_storage.py::test_pyfs_update ERROR                            [ 41%]
tests/test_storage.py::test_pyfs_update_fail ERROR                       [ 42%]
tests/test_storage.py::test_pyfs_checksum PASSED                         [ 42%]
tests/test_storage.py::test_pyfs_checksum_fail PASSED                    [ 43%]
tests/test_storage.py::test_pyfs_send_file ERROR                         [ 44%]
tests/test_storage.py::test_pyfs_send_file_for_download ERROR            [ 44%]
tests/test_storage.py::test_pyfs_send_file_xss_prevention ERROR          [ 45%]
tests/test_storage.py::test_pyfs_send_file_fail ERROR                    [ 46%]
tests/test_storage.py::test_pyfs_copy ERROR                              [ 46%]
tests/test_storage.py::test_non_unicode_filename ERROR                   [ 47%]
tests/test_tasks.py::test_verify_checksum ERROR                          [ 48%]
tests/test_tasks.py::test_schedule_checksum_verification ERROR           [ 48%]
tests/test_tasks.py::test_migrate_file ERROR                             [ 49%]
tests/test_tasks.py::test_migrate_file_copyfail ERROR                    [ 50%]
tests/test_tasks.py::test_remove_file_data ERROR                         [ 50%]
tests/test_views_bucket.py::test_head ERROR                              [ 51%]
tests/test_views_bucket.py::test_head_locked_deleted ERROR               [ 51%]
tests/test_views_bucket.py::test_get ERROR                               [ 52%]
tests/test_views_bucket.py::test_get_versions ERROR                      [ 53%]
tests/test_views_bucket.py::test_get_empty_bucket ERROR                  [ 53%]
tests/test_views_location.py::test_post_bucket[None-401] ERROR           [ 54%]
tests/test_views_location.py::test_post_bucket[auth-403] ERROR           [ 55%]
tests/test_views_location.py::test_post_bucket[location-200] ERROR       [ 55%]
tests/test_views_location.py::test_post_fail ERROR                       [ 56%]
tests/test_views_location.py::test_get_location[None-405] ERROR          [ 57%]
tests/test_views_location.py::test_get_location[auth-405] ERROR          [ 57%]
tests/test_views_location.py::test_get_location[location-405] ERROR      [ 58%]
tests/test_views_multipart.py::test_post_init[None-404] ERROR            [ 59%]
tests/test_views_multipart.py::test_post_init[auth-404] ERROR            [ 59%]
tests/test_views_multipart.py::test_post_init[objects-404] ERROR         [ 60%]
tests/test_views_multipart.py::test_post_init[bucket-200] ERROR          [ 61%]
tests/test_views_multipart.py::test_post_init[location-200] ERROR        [ 61%]
tests/test_views_multipart.py::test_post_init_fail ERROR                 [ 62%]
tests/test_views_multipart.py::test_post_init_querystring ERROR          [ 63%]
tests/test_views_multipart.py::test_get_init_not_allowed ERROR           [ 63%]
tests/test_views_multipart.py::test_post_invalid_partsizes ERROR         [ 64%]
tests/test_views_multipart.py::test_post_size_limits ERROR               [ 65%]
tests/test_views_multipart.py::test_post_locked_bucket ERROR             [ 65%]
tests/test_views_multipart.py::test_post_invalidkey ERROR                [ 66%]
tests/test_views_multipart.py::test_put ERROR                            [ 67%]
tests/test_views_multipart.py::test_put_not_found ERROR                  [ 67%]
tests/test_views_multipart.py::test_put_wrong_sizes ERROR                [ 68%]
tests/test_views_multipart.py::test_put_ngfileupload ERROR               [ 69%]
tests/test_views_multipart.py::test_put_invalid_part_number ERROR        [ 69%]
tests/test_views_multipart.py::test_put_completed_multipart ERROR        [ 70%]
tests/test_views_multipart.py::test_put_badstream ERROR                  [ 71%]
tests/test_views_multipart.py::test_get ERROR                            [ 71%]
tests/test_views_multipart.py::test_get_empty ERROR                      [ 72%]
tests/test_views_multipart.py::test_get_serialization ERROR              [ 73%]
tests/test_views_multipart.py::test_post_complete[None-404] ERROR        [ 73%]
tests/test_views_multipart.py::test_post_complete[auth-404] ERROR        [ 74%]
tests/test_views_multipart.py::test_post_complete[objects-404] ERROR     [ 75%]
tests/test_views_multipart.py::test_post_complete[bucket-200] ERROR      [ 75%]
tests/test_views_multipart.py::test_post_complete[location-200] ERROR    [ 76%]
tests/test_views_multipart.py::test_post_complete_fail ERROR             [ 76%]
tests/test_views_multipart.py::test_post_complete_timeout ERROR          [ 77%]
tests/test_views_multipart.py::test_delete ERROR                         [ 78%]
tests/test_views_multipart.py::test_delete_invalid ERROR                 [ 78%]
tests/test_views_multipart.py::test_delete_init_not_allowed ERROR        [ 79%]
tests/test_views_multipart.py::test_get_listuploads ERROR                [ 80%]
tests/test_views_multipart.py::test_already_exhausted_input_stream ERROR [ 80%]
tests/test_views_objectversion.py::test_get_not_found ERROR              [ 81%]
tests/test_views_objectversion.py::test_get ERROR                        [ 82%]
tests/test_views_objectversion.py::test_get_download ERROR               [ 82%]
tests/test_views_objectversion.py::test_last_modified_utc_conversion ERROR [ 83%]
tests/test_views_objectversion.py::test_get_unreadable_file ERROR        [ 84%]
tests/test_views_objectversion.py::test_get_versions ERROR               [ 84%]
tests/test_views_objectversion.py::test_get_versions_invalid ERROR       [ 85%]
tests/test_views_objectversion.py::test_post ERROR                       [ 86%]
tests/test_views_objectversion.py::test_put[None-404] ERROR              [ 86%]
tests/test_views_objectversion.py::test_put[auth-404] ERROR              [ 87%]
tests/test_views_objectversion.py::test_put[objects-404] ERROR           [ 88%]
tests/test_views_objectversion.py::test_put[bucket-200] ERROR            [ 88%]
tests/test_views_objectversion.py::test_put[location-200] ERROR          [ 89%]
tests/test_views_objectversion.py::test_put_fail ERROR                   [ 90%]
tests/test_views_objectversion.py::test_put_versioning ERROR             [ 90%]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota] ERROR [ 91%]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size] ERROR [ 92%]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None] ERROR [ 92%]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None] ERROR [ 93%]
tests/test_views_objectversion.py::test_put_invalid_key ERROR            [ 94%]
tests/test_views_objectversion.py::test_put_zero_size ERROR              [ 94%]
tests/test_views_objectversion.py::test_put_deleted_locked ERROR         [ 95%]
tests/test_views_objectversion.py::test_put_error ERROR                  [ 96%]
tests/test_views_objectversion.py::test_put_multipartform ERROR          [ 96%]
tests/test_views_objectversion.py::test_delete_versions_head_reset ERROR [ 97%]
tests/test_views_objectversion.py::test_delete_locked_deleted ERROR      [ 98%]
tests/test_views_objectversion.py::test_delete_unwritable ERROR          [ 98%]
tests/test_views_objectversion.py::test_put_header_tags ERROR            [ 99%]
tests/test_views_objectversion.py::test_put_header_invalid_tags ERROR    [100%]

==================================== ERRORS ====================================
______________________ ERROR at setup of test_admin_views ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_location ________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_location_default ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_location_validation __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_bucket_removal _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_bucket_kwargs_creation _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_bucket_create_object __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_bucket_retrieval ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_object_create _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_object_create_with_fileid _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_object_multibucket ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_object_get_by_bucket __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_object_delete _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_object_remove _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_object_remove_marker __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_object_set_contents __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_object_set_location __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_object_snapshot ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_object_snapshot_deleted ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_bucket_sync_new_object _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_bucket_sync_same_object ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_bucket_sync_deleted_object _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_bucket_sync_delete_extras _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_bucket_sync ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_bucket_sync_deleted __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_object_copy ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_object_set_file ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_object_mimetype ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_object_restore _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_object_relink_all ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_object_validation ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_bucket_tags ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_fileinstance_get ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_fileinstance_get_by_uri ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_fileinstance_create __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_fileinstance_set_contents _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_fileinstance_copy_contents _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_fileinstance_copy_contents_invalid ___________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_fileinstance_send_file _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_fileinstance_validation ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_object_version_tags __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_multipart_creation ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_multipart_last_part __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_part_creation _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_multipart_full _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_serialize_pretty ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_pyfs_initialize ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_pyfs_delete ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_pyfs_delete_fail ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_pyfs_save _______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_pyfs_save_failcleanup _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_pyfs_save_callback ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_pyfs_save_limits ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_pyfs_update ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_pyfs_update_fail ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_pyfs_send_file _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_pyfs_send_file_for_download ______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_pyfs_send_file_xss_prevention _____________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_pyfs_send_file_fail __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_pyfs_copy _______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_non_unicode_filename __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_verify_checksum ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_schedule_checksum_verification _____________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_migrate_file ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_migrate_file_copyfail _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_remove_file_data ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________________ ERROR at setup of test_head __________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_head_locked_deleted __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________________ ERROR at setup of test_get __________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_get_versions ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_get_empty_bucket ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_post_bucket[None-401] _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_post_bucket[auth-403] _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_post_bucket[location-200] _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_post_fail _______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_get_location[None-405] _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_get_location[auth-405] _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_get_location[location-405] _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_post_init[None-404] __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_post_init[auth-404] __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_post_init[objects-404] _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_post_init[bucket-200] _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_post_init[location-200] ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_post_init_fail _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_post_init_querystring _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_get_init_not_allowed __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_post_invalid_partsizes _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_post_size_limits ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_post_locked_bucket ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_post_invalidkey ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________________ ERROR at setup of test_put __________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_put_not_found _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_put_wrong_sizes ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_put_ngfileupload ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_put_invalid_part_number ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_put_completed_multipart ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_put_badstream _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________________ ERROR at setup of test_get __________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_get_empty _______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_get_serialization ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_post_complete[None-404] ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_post_complete[auth-404] ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_post_complete[objects-404] _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_post_complete[bucket-200] _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_post_complete[location-200] ______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_post_complete_fail ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_post_complete_timeout _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________________ ERROR at setup of test_delete _________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_delete_invalid _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_delete_init_not_allowed ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_get_listuploads ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_already_exhausted_input_stream _____________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_get_not_found _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________________ ERROR at setup of test_get __________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_get_download ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_last_modified_utc_conversion ______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_get_unreadable_file __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_get_versions ______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_get_versions_invalid __________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________________ ERROR at setup of test_post __________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_put[None-404] _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_put[auth-404] _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_put[objects-404] ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_put[bucket-200] ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_put[location-200] ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_put_fail ________________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_put_versioning _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of test_put_file_size_errors[50-100-400-Bucket quota] _____

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__ ERROR at setup of test_put_file_size_errors[100-50-400-Maximum file size] ___

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________ ERROR at setup of test_put_file_size_errors[100-100-200-None] _________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_put_file_size_errors[None-None-200-None] ________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_put_invalid_key ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_put_zero_size _____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_put_deleted_locked ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_put_error _______________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_put_multipartform ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_delete_versions_head_reset _______________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_delete_locked_deleted _________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_delete_unwritable ___________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_put_header_tags ____________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_put_header_invalid_tags ________________

    @pytest.fixture()
    def base_app():
        """Flask application fixture."""
        app_ = Flask('testapp')
        app_.config.update(
            TESTING=True,
            # Celery 3
            CELERY_ALWAYS_EAGER=True,
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            # Celery 4
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI',
            #     'sqlite:///:memory:'),
            SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest',
            WTF_CSRF_ENABLED=False,
            SERVER_NAME='invenio.org',
            SECURITY_PASSWORD_SALT='TEST_SECURITY_PASSWORD_SALT',
            SECRET_KEY='TEST_SECRET_KEY',
            FILES_REST_MULTIPART_CHUNKSIZE_MIN=2,
            FILES_REST_MULTIPART_CHUNKSIZE_MAX=20,
            FILES_REST_MULTIPART_MAX_PARTS=100,
            FILES_REST_TASK_WAIT_INTERVAL=0.1,
            FILES_REST_TASK_WAIT_MAX_SECONDS=1,
        )
    
        FlaskCeleryExt(app_)
>       InvenioDB(app_)

tests/conftest.py:92: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
=============================== warnings summary ===============================
tests/test_admin.py::test_admin_views
  /code/modules/invenio-files-rest/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/specifiers.py:276: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_admin.py::test_admin_views
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_default
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_location_validation
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_removal
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_kwargs_creation
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_create_object
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_bucket_retrieval
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_create_with_fileid
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_multibucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_get_by_bucket
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_delete
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_remove_marker
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_contents
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_set_location
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_object_snapshot_deleted
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_new_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_same_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_deleted_object
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync_delete_extras
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_bucket_sync_deleted
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_copy
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_set_file
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_mimetype
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_restore
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_relink_all
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_object_validation
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_bucket_tags
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_get_by_uri
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_create
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_set_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_copy_contents_invalid
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_send_file
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_fileinstance_validation
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models.py::test_object_version_tags
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_creation
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_multipart_last_part
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_part_creation
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_models_multipart.py::test_multipart_full
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_serializer.py::test_serialize_pretty
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_initialize
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_delete_fail
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_failcleanup
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_callback
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_save_limits
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_update_fail
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_for_download
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_xss_prevention
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_send_file_fail
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_pyfs_copy
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_storage.py::test_non_unicode_filename
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_verify_checksum
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_schedule_checksum_verification
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_migrate_file_copyfail
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_tasks.py::test_remove_file_data
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_head_locked_deleted
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_versions
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_bucket.py::test_get_empty_bucket
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[None-401]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[auth-403]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_bucket[location-200]
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_post_fail
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[None-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[auth-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_location.py::test_get_location[location-405]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[None-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[auth-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[objects-404]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[bucket-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init[location-200]
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_fail
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_post_init_querystring
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_get_init_not_allowed
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_invalid_partsizes
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_size_limits
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_locked_bucket
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_post_invalidkey
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_not_found
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_wrong_sizes
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_ngfileupload
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_invalid_part_number
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_completed_multipart
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_put_badstream
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_empty
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_get_serialization
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[None-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[auth-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[objects-404]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[bucket-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete[location-200]
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_fail
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_post_complete_timeout
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_invalid
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_delete_init_not_allowed
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_get_listuploads
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_multipart.py::test_already_exhausted_input_stream
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get_not_found
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_get_download
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_last_modified_utc_conversion
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_unreadable_file
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_get_versions_invalid
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_post
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[None-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[auth-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[objects-404]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[bucket-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put[location-200]
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_fail
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_versioning
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[50-100-400-Bucket quota]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-50-400-Maximum file size]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[100-100-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_file_size_errors[None-None-200-None]
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_invalid_key
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_zero_size
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_deleted_locked
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_error
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_put_multipartform
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_versions_head_reset
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_locked_deleted
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_delete_unwritable
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
tests/test_views_objectversion.py::test_put_header_invalid_tags
  /code/modules/invenio-files-rest/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/version.py:114: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                     Stmts   Miss Branch BrPart  Cover
--------------------------------------------------------------------------
invenio_files_rest/__init__.py               6      0      0      0   100%
invenio_files_rest/admin.py                131     17     38      7    79%
invenio_files_rest/api.py                   22     14      2      0    33%
invenio_files_rest/app.py                    6      0      2      0   100%
invenio_files_rest/cli.py                   46     26      2      0    42%
invenio_files_rest/config.py                31      0      0      0   100%
invenio_files_rest/errors.py                66      6     44      0    93%
invenio_files_rest/ext.py                   54     18     20      1    64%
invenio_files_rest/formparser.py            18      4     10      1    75%
invenio_files_rest/helpers.py              108     64     46      0    34%
invenio_files_rest/limiters.py              27      1     14      0    98%
invenio_files_rest/models.py               658    390    180     15    36%
invenio_files_rest/permissions.py           53     23     18      0    42%
invenio_files_rest/proxies.py                7      0      4      2    82%
invenio_files_rest/serializer.py           141     77     48      0    39%
invenio_files_rest/signals.py                7      0      0      0   100%
invenio_files_rest/storage/__init__.py       5      0      0      0   100%
invenio_files_rest/storage/base.py          88     44     24      0    45%
invenio_files_rest/storage/pyfs.py         120     87     28      0    24%
invenio_files_rest/tasks.py                146    110     52      0    18%
invenio_files_rest/utils.py                 82     61     26      0    19%
invenio_files_rest/version.py                3      0      0      0   100%
invenio_files_rest/views.py                358    235    126      7    29%
invenio_files_rest/wrappers.py               6      0      2      0   100%
--------------------------------------------------------------------------
TOTAL                                     2189   1177    686     33    41%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml

======== 9 passed, 2 skipped, 3385 warnings, 141 error in 60.26 seconds ========
ERROR: InvocationError for command /code/modules/invenio-files-rest/.tox/c1/bin/pytest --cov=invenio_files_rest tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/invenio-files-rest/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
