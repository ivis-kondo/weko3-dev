GLOB sdist-make: /code/modules/invenio-deposit/setup.py
c1 create: /code/modules/invenio-deposit/.tox/c1
c1 installdeps: pytest>=3, pytest-cov, -rrequirements2.txt
c1 inst: /code/modules/invenio-deposit/.tox/.tmp/package/1/invenio-deposit-1.0.0a9.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@98eb36e1dfc66256fa7ea62237e9879acb906e9d#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_db&subdirectory=modules/invenio-db,invenio-deposit @ file:///code/modules/invenio-deposit/.tox/.tmp/package/1/invenio-deposit-1.0.0a9.zip,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_swordserver&subdirectory=modules/weko-swordserver,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='1487230023'
c1 run-test: commands[0] | pytest --cov=invenio_deposit tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/invenio-deposit/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/invenio-deposit/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/invenio-deposit, inifile:
plugins: celery-4.4.4, cov-2.9.0
collecting ... collected 39 items

tests/test_api.py::test_schemas ERROR                                    [  2%]
tests/test_api.py::test_simple_flow ERROR                                [  5%]
tests/test_api.py::test_delete ERROR                                     [  7%]
tests/test_api.py::test_files_property ERROR                             [ 10%]
tests/test_api.py::test_publish_revision_changed_mergeable ERROR         [ 12%]
tests/test_api.py::test_publish_revision_changed_not_mergeable ERROR     [ 15%]
tests/test_cli.py::test_reindex ERROR                                    [ 17%]
tests/test_examples_app.py::test_example_app ERROR                       [ 20%]
tests/test_invenio_deposit.py::test_version PASSED                       [ 23%]
tests/test_invenio_deposit.py::test_bundles PASSED                       [ 25%]
tests/test_invenio_deposit.py::test_init PASSED                          [ 28%]
tests/test_invenio_deposit.py::test_conflict_in_endpoint_prefixes PASSED [ 30%]
tests/test_invenio_deposit.py::test_template ERROR                       [ 33%]
tests/test_views_rest.py::test_publish_merge_conflict ERROR              [ 35%]
tests/test_views_rest.py::test_edit_deposit_users[None-401] ERROR        [ 38%]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200] ERROR  [ 41%]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403] ERROR  [ 43%]
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token ERROR   [ 46%]
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token ERROR    [ 48%]
tests/test_views_rest.py::test_delete_deposit_users[None-401] ERROR      [ 51%]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204] ERROR [ 53%]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403] ERROR [ 56%]
tests/test_views_rest.py::test_links_html_link_missing ERROR             [ 58%]
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token ERROR [ 61%]
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token ERROR  [ 64%]
tests/test_views_rest.py::test_deposition_file_operations ERROR          [ 66%]
tests/test_views_rest.py::test_simple_rest_flow ERROR                    [ 69%]
tests/test_views_rest_files.py::test_created_by_population ERROR         [ 71%]
tests/test_views_rest_files.py::test_files_get ERROR                     [ 74%]
tests/test_views_rest_files.py::test_files_get_oauth2 ERROR              [ 76%]
tests/test_views_rest_files.py::test_files_get_without_files ERROR       [ 79%]
tests/test_views_rest_files.py::test_files_post_oauth2 ERROR             [ 82%]
tests/test_views_rest_files.py::test_files_post ERROR                    [ 84%]
tests/test_views_rest_files.py::test_files_put ERROR                     [ 87%]
tests/test_views_rest_files.py::test_file_get_not_found ERROR            [ 89%]
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist ERROR [ 92%]
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist ERROR [ 94%]
tests/test_views_ui.py::test_index_new ERROR                             [ 97%]
tests/test_views_ui.py::test_edit ERROR                                  [100%]

==================================== ERRORS ====================================
________________________ ERROR at setup of test_schemas ________________________

request = <SubRequest 'base_app' for <Function test_schemas>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_simple_flow ______________________

request = <SubRequest 'base_app' for <Function test_simple_flow>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________________ ERROR at setup of test_delete _________________________

request = <SubRequest 'base_app' for <Function test_delete>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_files_property _____________________

request = <SubRequest 'base_app' for <Function test_files_property>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_publish_revision_changed_mergeable ___________

request = <SubRequest 'base_app' for <Function test_publish_revision_changed_mergeable>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________ ERROR at setup of test_publish_revision_changed_not_mergeable _________

request = <SubRequest 'base_app' for <Function test_publish_revision_changed_not_mergeable>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________________ ERROR at setup of test_reindex ________________________

request = <SubRequest 'base_app' for <Function test_reindex>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:128: in init_app
    InvenioDB(app_)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_example_app ______________________

    @pytest.yield_fixture
    def example_app():
        """Example app fixture."""
        current_dir = os.getcwd()
        # go to example directory
        project_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        exampleappdir = os.path.join(project_dir, 'examples')
        os.chdir(exampleappdir)
        # setup example
        cmd = './app-setup.sh'
        exit_status = subprocess.call(cmd, shell=True)
>       assert exit_status == 1
E       assert 243 == 1
E         -243
E         +1

../tests/test_examples_app.py:47: AssertionError
---------------------------- Captured stdout setup -----------------------------
Requirement already satisfied: dojson>=1.0.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 25)) (1.3.2)
Requirement already satisfied: invenio-access>=1.0.0a9 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 26)) (1.1.0)
Requirement already satisfied: invenio-accounts>=1.0.0a13 in /code/modules/invenio-accounts (from -r requirements.txt (line 27)) (1.1.4)
Requirement already satisfied: invenio-admin>=1.0.0a3 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 28)) (1.1.2)
Requirement already satisfied: invenio-i18n>=1.0.0b1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 29)) (1.0.0)
Requirement already satisfied: invenio-pidstore>=1.0.0a9 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 30)) (1.0.0)
Requirement already satisfied: invenio-rest[cors]>=1.0.0a9 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 31)) (1.1.2)
Requirement already satisfied: invenio-theme>=1.0.0a17 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from -r requirements.txt (line 32)) (1.0.0b4)
Requirement already satisfied: simplejson>=3.8.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from dojson>=1.0.0->-r requirements.txt (line 25)) (3.12.0)
Requirement already satisfied: lxml>=3.4 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from dojson>=1.0.0->-r requirements.txt (line 25)) (4.1.1)
Requirement already satisfied: click>=5.0.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from dojson>=1.0.0->-r requirements.txt (line 25)) (6.7)
Requirement already satisfied: six>=1.10 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (1.16.0)
Requirement already satisfied: Flask>=0.11.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (1.1.0)
Requirement already satisfied: Flask-BabelEx>=0.9.3 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (0.9.4)
Requirement already satisfied: cryptography>=2.1.4 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2.1.4)
Requirement already satisfied: email-validator>=1.0.5 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.0.5)
Requirement already satisfied: Flask-Breadcrumbs>=0.4.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.5.0)
Requirement already satisfied: Flask-KVSession>=0.6.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.6.2)
Requirement already satisfied: Flask-Login<0.5.0,>=0.3.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.4.1)
Requirement already satisfied: Flask-Mail>=0.9.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.9.1)
Requirement already satisfied: Flask-Menu>=0.5.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.6.0)
Requirement already satisfied: Flask-Security>=3.0.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (3.0.0)
Requirement already satisfied: Flask-WTF>=0.13.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.14.3)
Requirement already satisfied: future>=0.16.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.16.0)
Requirement already satisfied: invenio-celery>=1.1.2 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.1.3)
Requirement already satisfied: maxminddb-geolite2>=2017.404 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2017.803)
Requirement already satisfied: passlib>=1.7.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.7.1)
Requirement already satisfied: pyjwt>=1.5.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.5.3)
Requirement already satisfied: redis>=2.10.5 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2.10.6)
Requirement already satisfied: simplekv>=0.11.2 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.11.2)
Requirement already satisfied: SQLAlchemy-Utils>=0.31.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.35.0)
Requirement already satisfied: ua-parser>=0.7.3 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.7.3)
Requirement already satisfied: werkzeug>=0.15 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.15.2)
Requirement already satisfied: Flask-Admin>=1.5.3 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (1.5.3)
Requirement already satisfied: Flask-Principal>=0.4.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (0.4.0)
Requirement already satisfied: invenio-db>=1.0.0 in /code/modules/invenio-db (from invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (1.0.4)
Requirement already satisfied: marshmallow>=2.15.2 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-rest[cors]>=1.0.0a9->-r requirements.txt (line 31)) (2.20.1)
Requirement already satisfied: webargs>=5.5.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-rest[cors]>=1.0.0a9->-r requirements.txt (line 31)) (5.5.2)
Requirement already satisfied: Flask-CORS>=2.1.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-rest[cors]>=1.0.0a9->-r requirements.txt (line 31)) (3.0.3)
Requirement already satisfied: jsmin>=2.1.6 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (2.2.2)
Requirement already satisfied: invenio-assets>=1.0.0b6 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (1.0.0)
Requirement already satisfied: asn1crypto>=0.21.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from cryptography>=2.1.4->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.23.0)
Requirement already satisfied: idna>=2.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from cryptography>=2.1.4->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2.6)
Requirement already satisfied: cffi>=1.7 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from cryptography>=2.1.4->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.11.2)
Requirement already satisfied: dnspython>=1.15.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from email-validator>=1.0.5->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2.2.1)
Requirement already satisfied: itsdangerous>=0.24 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask>=0.11.1->invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (0.24)
Requirement already satisfied: Jinja2>=2.10.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask>=0.11.1->invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (2.10.1)
Requirement already satisfied: wtforms in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask-Admin>=1.5.3->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (2.1)
Requirement already satisfied: speaklater>=1.2 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask-BabelEx>=0.9.3->invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (1.3)
Requirement already satisfied: Babel>=1.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask-BabelEx>=0.9.3->invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (2.5.1)
Requirement already satisfied: blinker in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask-Mail>=0.9.1->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.4)
Requirement already satisfied: Flask-Collect==1.2.2 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-assets>=1.0.0b6->invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (1.2.2)
Requirement already satisfied: Flask-Assets>=0.12 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-assets>=1.0.0b6->invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (0.12)
Requirement already satisfied: webassets>=0.12 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-assets>=1.0.0b6->invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (0.12.1)
Requirement already satisfied: node-semver<0.2.0,>=0.1.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-assets>=1.0.0b6->invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (0.1.1)
Requirement already satisfied: celery!=4.3,>=4.2.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (4.4.4)
Requirement already satisfied: Flask-CeleryExt>=0.3.4 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.3.4)
Requirement already satisfied: msgpack>=0.6.2 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (0.6.2)
Requirement already satisfied: Flask-Alembic>=2.0.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (2.0.1)
Requirement already satisfied: Flask-SQLAlchemy>=2.1 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (2.3.2)
Requirement already satisfied: SQLAlchemy>=1.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (1.2.19)
Requirement already satisfied: maxminddb in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from maxminddb-geolite2>=2017.404->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.5.2)
Requirement already satisfied: pytz>=0a in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Babel>=1.0->Flask-BabelEx>=0.9.3->invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (2017.3)
Requirement already satisfied: billiard<4.0,>=3.6.3.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (3.6.3.0)
Requirement already satisfied: kombu<4.7,>=4.6.10 in /code/modules/invenio-deposit/.tox/c1/src/kombu (from celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (4.6.10)
Requirement already satisfied: vine==1.3.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (1.3.0)
Requirement already satisfied: pycparser in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from cffi>=1.7->cryptography>=2.1.4->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2.18)
Requirement already satisfied: alembic>=0.8 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Flask-Alembic>=2.0.1->invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (0.9.6)
Requirement already satisfied: MarkupSafe>=0.23 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from Jinja2>=2.10.1->Flask>=0.11.1->invenio-access>=1.0.0a9->-r requirements.txt (line 26)) (1.1.1)
Requirement already satisfied: setuptools in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from node-semver<0.2.0,>=0.1.1->invenio-assets>=1.0.0b6->invenio-theme>=1.0.0a17->-r requirements.txt (line 32)) (59.6.0)
Requirement already satisfied: Mako in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from alembic>=0.8->Flask-Alembic>=2.0.1->invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (1.0.7)
Requirement already satisfied: python-dateutil in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from alembic>=0.8->Flask-Alembic>=2.0.1->invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (2.6.1)
Requirement already satisfied: python-editor>=0.3 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from alembic>=0.8->Flask-Alembic>=2.0.1->invenio-db>=1.0.0->invenio-admin>=1.0.0a3->-r requirements.txt (line 28)) (1.0.3)
Requirement already satisfied: amqp<2.7,>=2.6.0 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from kombu<4.7,>=4.6.10->celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (2.6.0)
Requirement already satisfied: importlib-metadata>=0.18 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from kombu<4.7,>=4.6.10->celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (4.8.3)
Requirement already satisfied: typing-extensions>=3.6.4 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from importlib-metadata>=0.18->kombu<4.7,>=4.6.10->celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (4.1.1)
Requirement already satisfied: zipp>=0.5 in /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages (from importlib-metadata>=0.18->kombu<4.7,>=4.6.10->celery!=4.3,>=4.2.1->invenio-celery>=1.1.2->invenio-accounts>=1.0.0a13->-r requirements.txt (line 27)) (3.6.0)
---------------------------- Captured stderr setup -----------------------------
npm WARN engine node-sass@9.0.0: wanted: {"node":">=16"} (current: {"node":"4.8.7","npm":"2.15.11"})
npm ERR! Linux 4.18.0-477.27.1.el8_8.x86_64
npm ERR! argv "/usr/bin/node" "/usr/bin/npm" "install" "-g" "node-sass" "clean-css@3" "requirejs" "uglify-js"
npm ERR! node v4.8.7
npm ERR! npm  v2.15.11
npm ERR! path /usr/bin/cleancss
npm ERR! code EACCES
npm ERR! errno -13
npm ERR! syscall unlink

npm ERR! Error: EACCES: permission denied, unlink '/usr/bin/cleancss'
npm ERR!     at Error (native)
npm ERR!  { [Error: EACCES: permission denied, unlink '/usr/bin/cleancss']
npm ERR!   errno: -13,
npm ERR!   code: 'EACCES',
npm ERR!   syscall: 'unlink',
npm ERR!   path: '/usr/bin/cleancss' }
npm ERR! 
npm ERR! Please try running this command again as root/Administrator.
npm ERR! error rolling back Error: EACCES: permission denied, unlink '/usr/bin/cleancss'
npm ERR! error rolling back     at Error (native)
npm ERR! error rolling back  { [Error: EACCES: permission denied, unlink '/usr/bin/cleancss']
npm ERR! error rolling back   errno: -13,
npm ERR! error rolling back   code: 'EACCES',
npm ERR! error rolling back   syscall: 'unlink',
npm ERR! error rolling back   path: '/usr/bin/cleancss' }

npm ERR! Please include the following file with any support request:
npm ERR!     /code/modules/invenio-deposit/examples/npm-debug.log
_______________________ ERROR at setup of test_template ________________________

request = <SubRequest 'base_app' for <Function test_template>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_publish_merge_conflict _________________

request = <SubRequest 'base_app' for <Function test_publish_merge_conflict>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_edit_deposit_users[None-401] ______________

request = <SubRequest 'base_app' for <Function test_edit_deposit_users[None-401]>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_edit_deposit_users[user_info1-200] ___________

request = <SubRequest 'base_app' for <Function test_edit_deposit_users[user_info1-200]>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_edit_deposit_users[user_info2-403] ___________

request = <SubRequest 'base_app' for <Function test_edit_deposit_users[user_info2-403]>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_edit_deposit_by_good_oauth2_token ___________

request = <SubRequest 'base_app' for <Function test_edit_deposit_by_good_oauth2_token>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_edit_deposit_by_bad_oauth2_token ____________

request = <SubRequest 'base_app' for <Function test_edit_deposit_by_bad_oauth2_token>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_delete_deposit_users[None-401] _____________

request = <SubRequest 'base_app' for <Function test_delete_deposit_users[None-401]>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________ ERROR at setup of test_delete_deposit_users[user_info1-204] __________

request = <SubRequest 'base_app' for <Function test_delete_deposit_users[user_info1-204]>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________ ERROR at setup of test_delete_deposit_users[user_info2-403] __________

request = <SubRequest 'base_app' for <Function test_delete_deposit_users[user_info2-403]>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_links_html_link_missing ________________

request = <SubRequest 'base_app' for <Function test_links_html_link_missing>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_delete_deposit_by_good_oauth2_token __________

request = <SubRequest 'base_app' for <Function test_delete_deposit_by_good_oauth2_token>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_delete_deposit_by_bad_oauth2_token ___________

request = <SubRequest 'base_app' for <Function test_delete_deposit_by_bad_oauth2_token>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_deposition_file_operations _______________

request = <SubRequest 'base_app' for <Function test_deposition_file_operations>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_simple_rest_flow ____________________

request = <SubRequest 'base_app' for <Function test_simple_rest_flow>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_created_by_population _________________

request = <SubRequest 'base_app' for <Function test_created_by_population>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_files_get _______________________

request = <SubRequest 'base_app' for <Function test_files_get>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_files_get_oauth2 ____________________

request = <SubRequest 'base_app' for <Function test_files_get_oauth2>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_files_get_without_files ________________

request = <SubRequest 'base_app' for <Function test_files_get_without_files>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_files_post_oauth2 ___________________

request = <SubRequest 'base_app' for <Function test_files_post_oauth2>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_files_post _______________________

request = <SubRequest 'base_app' for <Function test_files_post>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_files_put _______________________

request = <SubRequest 'base_app' for <Function test_files_put>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_file_get_not_found ___________________

request = <SubRequest 'base_app' for <Function test_file_get_not_found>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_file_put_not_found_bucket_not_exist __________

request = <SubRequest 'base_app' for <Function test_file_put_not_found_bucket_not_exist>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_file_put_not_found_file_not_exist ___________

request = <SubRequest 'base_app' for <Function test_file_put_not_found_file_not_exist>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_index_new _______________________

request = <SubRequest 'base_app' for <Function test_index_new>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________________ ERROR at setup of test_edit __________________________

request = <SubRequest 'base_app' for <Function test_edit>>

    @pytest.yield_fixture()
    def base_app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app_):
            app_.config.update(
                BROKER_URL='amqp://guest:guest@rabbitmq:5672/',
                CELERY_BROKER_URL = 'amqp://guest:guest@rabbitmq:5672/',
                CELERY_ALWAYS_EAGER=True,
                CELERY_CACHE_BACKEND='memory',
                CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
                CELERY_RESULT_BACKEND='cache',
                JSONSCHEMAS_URL_SCHEME='http',
                SECRET_KEY='CHANGE_ME',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                # SQLALCHEMY_DATABASE_URI=os.environ.get(
                #     'SQLALCHEMY_DATABASE_URI', 'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SEARCH_ELASTIC_HOSTS=os.environ.get(
                    'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                SQLALCHEMY_ECHO=False,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
                DEPOSIT_SEARCH_API='/api/search',
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                OAUTHLIB_INSECURE_TRANSPORT=True,
                OAUTH2_CACHE_TYPE='simple',
                ACCOUNTS_JWT_ENABLE=False,
                INDEXER_DEFAULT_INDEX='records-default-v1.0.0',
                INDEXER_DEFAULT_DOC_TYPE='default-v1.0.0',
                INDEXER_MQ_QUEUE = Queue("indexer",
                                     exchange=Exchange("indexer", type="direct"), routing_key="indexer",auto_delete=False,queue_arguments={"x-queue-type":"quorum"}),
    
            )
            Babel(app_)
            FlaskCeleryExt(app_)
            Breadcrumbs(app_)
            OAuth2Provider(app_)
            InvenioDB(app_)
            InvenioAccounts(app_)
            InvenioAccess(app_)
            InvenioIndexer(app_)
            InvenioJSONSchemas(app_)
            InvenioOAuth2Server(app_)
            InvenioFilesREST(app_)
            InvenioPIDStore(app_)
            InvenioRecords(app_)
            InvenioSearch(app_)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.url_map.converters['pid'] = PIDConverter
        # initialize InvenioDeposit first in order to detect any invalid dependency
        InvenioDepositREST(api_app)
    
>       init_app(api_app)

../tests/conftest.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../tests/conftest.py:128: in init_app
    InvenioDB(app_)
../../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
../.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
=============================== warnings summary ===============================
tests/test_api.py::test_schemas
tests/test_api.py::test_simple_flow
tests/test_api.py::test_delete
tests/test_api.py::test_files_property
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_cli.py::test_reindex
tests/test_invenio_deposit.py::test_template
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_edit
  /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages/flask_celeryext/app.py:36: UserWarning: Celery v4 installed, but detected Celery v3 configuration CELERY_ALWAYS_EAGER (use CELERY_TASK_ALWAYS_EAGER instead).
    UserWarning

tests/test_api.py::test_schemas
tests/test_api.py::test_simple_flow
tests/test_api.py::test_delete
tests/test_api.py::test_files_property
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_cli.py::test_reindex
tests/test_invenio_deposit.py::test_template
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_edit
  /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages/flask_celeryext/app.py:36: UserWarning: Celery v4 installed, but detected Celery v3 configuration CELERY_EAGER_PROPAGATES_EXCEPTIONS (use CELERY_TASK_EAGER_PROPAGATES instead).
    UserWarning

tests/test_api.py::test_schemas
  /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/specifiers.py:276: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_schemas
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_simple_flow
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_files_property
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_api.py::test_publish_revision_changed_not_mergeable
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_cli.py::test_reindex
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_invenio_deposit.py::test_template
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_publish_merge_conflict
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[None-401]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info1-200]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_users[user_info2-403]
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_edit_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[None-401]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info1-204]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_delete_deposit_users[user_info2-403]
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_links_html_link_missing
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_good_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_delete_deposit_by_bad_oauth2_token
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_deposition_file_operations
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest.py::test_simple_rest_flow
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_created_by_population
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_oauth2
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_get_without_files
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post_oauth2
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_post
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_files_put
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_get_not_found
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_bucket_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_rest_files.py::test_file_put_not_found_file_not_exist
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_index_new
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
tests/test_views_ui.py::test_edit
  /code/modules/invenio-deposit/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/version.py:114: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                      Stmts   Miss Branch BrPart  Cover
---------------------------------------------------------------------------
invenio_deposit/__init__.py                   5      0      0      0   100%
invenio_deposit/api.py                      225    140     50      1    34%
invenio_deposit/bundles.py                   13      0      0      0   100%
invenio_deposit/cli.py                       68     27      6      0    55%
invenio_deposit/config.py                    31      0      0      0   100%
invenio_deposit/errors.py                    12      0      6      0   100%
invenio_deposit/ext.py                       55     10     32      2    75%
invenio_deposit/fetchers.py                   6      1      0      0    83%
invenio_deposit/jsonschemas/__init__.py       1      1      0      0     0%
invenio_deposit/links.py                     21     14      6      0    26%
invenio_deposit/mappings/__init__.py          1      1      0      0     0%
invenio_deposit/mappings/v2/__init__.py       1      1      0      0     0%
invenio_deposit/mappings/v5/__init__.py       1      1      0      0     0%
invenio_deposit/mappings/v6/__init__.py       1      1      0      0     0%
invenio_deposit/minters.py                    8      3      0      0    62%
invenio_deposit/permissions.py               11      6      0      0    45%
invenio_deposit/providers.py                 13      3      2      0    80%
invenio_deposit/proxies.py                    6      0      2      0   100%
invenio_deposit/receivers.py                  7      3      2      0    44%
invenio_deposit/scopes.py                    10      0      2      0   100%
invenio_deposit/search.py                    18      3      6      0    79%
invenio_deposit/serializers.py               22     12      6      0    36%
invenio_deposit/signals.py                    5      0      0      0   100%
invenio_deposit/utils.py                     27      7      6      1    76%
invenio_deposit/version.py                    3      0      0      0   100%
invenio_deposit/views/__init__.py             2      0      0      0   100%
invenio_deposit/views/rest.py               186     92     38      3    50%
invenio_deposit/views/ui.py                  39     14      4      0    63%
---------------------------------------------------------------------------
TOTAL                                       798    340    168      7    55%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml

============== 4 passed, 885 warnings, 35 error in 27.81 seconds ===============
ERROR: InvocationError for command /code/modules/invenio-deposit/.tox/c1/bin/pytest --cov=invenio_deposit tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/invenio-deposit/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
