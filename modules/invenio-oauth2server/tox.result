GLOB sdist-make: /code/modules/invenio-oauth2server/setup.py
c1 create: /code/modules/invenio-oauth2server/.tox/c1
c1 installdeps: pytest>=3, pytest-cov, -rrequirements2.txt
c1 inst: /code/modules/invenio-oauth2server/.tox/.tmp/package/1/invenio-oauth2server-1.0.0.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@98eb36e1dfc66256fa7ea62237e9879acb906e9d#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,invenio-oauth2server @ file:///code/modules/invenio-oauth2server/.tox/.tmp/package/1/invenio-oauth2server-1.0.0.zip,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_swordserver&subdirectory=modules/weko-swordserver,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='3962765880'
c1 run-test: commands[0] | pytest --cov=invenio_oauth2server tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/invenio-oauth2server/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/invenio-oauth2server/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/invenio-oauth2server, inifile:
plugins: celery-4.4.4, cov-2.9.0
collecting ... collected 60 items

tests/test_admin.py::test_admin ERROR                                    [  1%]
tests/test_cli.py::test_cli_tokens ERROR                                 [  3%]
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue ERROR [  5%]
tests/test_decorators.py::test_require_api_auth_test1 ERROR              [  6%]
tests/test_decorators.py::test_require_api_auth_test2 ERROR              [  8%]
tests/test_decorators.py::test_require_oauth_scopes_test1 ERROR          [ 10%]
tests/test_decorators.py::test_require_oauth_scopes_test2 ERROR          [ 11%]
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous ERROR [ 13%]
tests/test_decorators.py::test_rest_extension ERROR                      [ 15%]
tests/test_decorators.py::test_access_login_required ERROR               [ 16%]
tests/test_decorators.py::test_jwt_client ERROR                          [ 18%]
tests/test_invenio_oauth2server.py::test_version PASSED                  [ 20%]
tests/test_invenio_oauth2server.py::test_init SKIPPED                    [ 21%]
tests/test_invenio_oauth2server.py::test_init_rest PASSED                [ 23%]
tests/test_invenio_oauth2server.py::test_init_rest_with_oauthlib_monkeypatch PASSED [ 25%]
tests/test_models.py::test_empty_redirect_uri_and_scope ERROR            [ 26%]
tests/test_models.py::test_token_scopes ERROR                            [ 28%]
tests/test_models.py::test_registering_invalid_scope ERROR               [ 30%]
tests/test_models.py::test_deletion_of_consumer_resource_owner ERROR     [ 31%]
tests/test_models.py::test_deletion_of_resource_owner_consumer ERROR     [ 33%]
tests/test_models.py::test_deletion_of_client1 ERROR                     [ 35%]
tests/test_models.py::test_deletion_of_token1 ERROR                      [ 36%]
tests/test_models.py::test_deletion_of_token2 ERROR                      [ 38%]
tests/test_provider.py::test_client_salt ERROR                           [ 40%]
tests/test_provider.py::test_invalid_authorize_requests ERROR            [ 41%]
tests/test_provider.py::test_refresh_flow ERROR                          [ 43%]
tests/test_provider.py::test_implicit_flow ERROR                         [ 45%]
tests/test_provider.py::test_client_flow ERROR                           [ 46%]
tests/test_provider.py::test_auth_flow_denied ERROR                      [ 48%]
tests/test_provider.py::test_personal_access_token ERROR                 [ 50%]
tests/test_provider.py::test_resource_auth_methods ERROR                 [ 51%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True] ERROR [ 53%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True] ERROR [ 55%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True] ERROR [ 56%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True] ERROR [ 58%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True] ERROR [ 60%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False] ERROR [ 61%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False] ERROR [ 63%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False] ERROR [ 65%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False] ERROR [ 66%]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False] ERROR [ 68%]
tests/test_provider.py::test_oauthlib_monkeypatch ERROR                  [ 70%]
tests/test_provider.py::test_settings_index ERROR                        [ 71%]
tests/test_provider.py::test_info_not_accessible_in_production ERROR     [ 73%]
tests/test_provider.py::test_expired_refresh_flow ERROR                  [ 75%]
tests/test_provider.py::test_not_allowed_public_refresh_flow ERROR       [ 76%]
tests/test_provider.py::test_password_grant_type ERROR                   [ 78%]
tests/test_provider.py::test_email_scope ERROR                           [ 80%]
tests/test_server.py::test_user_identity_init ERROR                      [ 81%]
tests/test_settings.py::test_personal_token_management ERROR             [ 83%]
tests/test_settings.py::test_authorized_app_revocation ERROR             [ 85%]
tests/test_settings.py::test_client_management ERROR                     [ 86%]
tests/test_utils.py::test_rebuilding_access_tokens ERROR                 [ 88%]
tests/test_validators.py::test_validate_redirect_uri[example.org/-expected0] PASSED [ 90%]
tests/test_validators.py::test_validate_redirect_uri[http://-expected1] PASSED [ 91%]
tests/test_validators.py::test_validate_redirect_uri[http://example.org/-expected2] PASSED [ 93%]
tests/test_validators.py::test_validate_redirect_uri[https://example.org/-None] PASSED [ 95%]
tests/test_validators.py::test_validate_redirect_uri[https://localhost/-None] PASSED [ 96%]
tests/test_validators.py::test_validate_redirect_uri[https://127.0.0.1-None] PASSED [ 98%]
tests/test_validators.py::test_url_validator ERROR                       [100%]

==================================== ERRORS ====================================
_________________________ ERROR at setup of test_admin _________________________

request = <SubRequest 'app' for <Function test_admin>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_cli_tokens _______________________

request = <SubRequest 'app' for <Function test_cli_tokens>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_require_api_auth_oauthlib_urldecode_issue _______

request = <SubRequest 'app' for <Function test_require_api_auth_oauthlib_urldecode_issue>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_require_api_auth_test1 _________________

request = <SubRequest 'app' for <Function test_require_api_auth_test1>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_require_api_auth_test2 _________________

request = <SubRequest 'app' for <Function test_require_api_auth_test2>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_require_oauth_scopes_test1 _______________

request = <SubRequest 'app' for <Function test_require_oauth_scopes_test1>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_require_oauth_scopes_test2 _______________

request = <SubRequest 'app' for <Function test_require_oauth_scopes_test2>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________ ERROR at setup of test_require_oauth_scopes_allow_anonymous __________

request = <SubRequest 'app' for <Function test_require_oauth_scopes_allow_anonymous>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_rest_extension _____________________

request = <SubRequest 'app' for <Function test_rest_extension>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_access_login_required _________________

request = <SubRequest 'app' for <Function test_access_login_required>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_jwt_client _______________________

request = <SubRequest 'app' for <Function test_jwt_client>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_empty_redirect_uri_and_scope ______________

request = <SubRequest 'app' for <Function test_empty_redirect_uri_and_scope>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_token_scopes ______________________

request = <SubRequest 'app' for <Function test_token_scopes>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_registering_invalid_scope _______________

request = <SubRequest 'app' for <Function test_registering_invalid_scope>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_deletion_of_consumer_resource_owner __________

request = <SubRequest 'app' for <Function test_deletion_of_consumer_resource_owner>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_deletion_of_resource_owner_consumer __________

request = <SubRequest 'app' for <Function test_deletion_of_resource_owner_consumer>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_deletion_of_client1 __________________

request = <SubRequest 'app' for <Function test_deletion_of_client1>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_deletion_of_token1 ___________________

request = <SubRequest 'app' for <Function test_deletion_of_token1>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_deletion_of_token2 ___________________

request = <SubRequest 'app' for <Function test_deletion_of_token2>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_client_salt ______________________

request = <SubRequest 'app' for <Function test_client_salt>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_invalid_authorize_requests _______________

request = <SubRequest 'app' for <Function test_invalid_authorize_requests>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_refresh_flow ______________________

request = <SubRequest 'app' for <Function test_refresh_flow>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_implicit_flow _____________________

request = <SubRequest 'app' for <Function test_implicit_flow>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_client_flow ______________________

request = <SubRequest 'app' for <Function test_client_flow>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_auth_flow_denied ____________________

request = <SubRequest 'app' for <Function test_auth_flow_denied>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_personal_access_token _________________

request = <SubRequest 'app' for <Function test_personal_access_token>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_resource_auth_methods _________________

request = <SubRequest 'app' for <Function test_resource_auth_methods>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of test_oauthlib_urldecoding_issue[q=RegularArg-True] _____

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[q=RegularArg-True]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True] ______

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__ ERROR at setup of test_oauthlib_urldecoding_issue[q=text+with+spaces-True] __

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[q=text+with+spaces-True]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___ ERROR at setup of test_oauthlib_urldecoding_issue[q=title:TheTitle-True] ___

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[q=title:TheTitle-True]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True] _

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____ ERROR at setup of test_oauthlib_urldecoding_issue[$type=search-False] _____

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[$type=search-False]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____ ERROR at setup of test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False] _____

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_oauthlib_urldecoding_issue[with regular spaces-False] _

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[with regular spaces-False]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__ ERROR at setup of test_oauthlib_urldecoding_issue[json_data={a: 42}-False] __

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[json_data={a: 42}-False]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___ ERROR at setup of test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False] ___

request = <SubRequest 'app' for <Function test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_oauthlib_monkeypatch __________________

request = <SubRequest 'app' for <Function test_oauthlib_monkeypatch>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_settings_index _____________________

request = <SubRequest 'app' for <Function test_settings_index>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_info_not_accessible_in_production ___________

request = <SubRequest 'app' for <Function test_info_not_accessible_in_production>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_expired_refresh_flow __________________

request = <SubRequest 'app' for <Function test_expired_refresh_flow>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_not_allowed_public_refresh_flow ____________

request = <SubRequest 'app' for <Function test_not_allowed_public_refresh_flow>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_password_grant_type __________________

request = <SubRequest 'app' for <Function test_password_grant_type>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_email_scope ______________________

request = <SubRequest 'app' for <Function test_email_scope>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_user_identity_init ___________________

request = <SubRequest 'app' for <Function test_user_identity_init>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_personal_token_management _______________

request = <SubRequest 'app' for <Function test_personal_token_management>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_authorized_app_revocation _______________

request = <SubRequest 'app' for <Function test_authorized_app_revocation>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_client_management ___________________

request = <SubRequest 'app' for <Function test_client_management>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_rebuilding_access_tokens ________________

request = <SubRequest 'app' for <Function test_rebuilding_access_tokens>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_url_validator _____________________

request = <SubRequest 'app' for <Function test_url_validator>>

    @pytest.fixture()
    def app(request):
        """Flask application fixture."""
        instance_path = tempfile.mkdtemp()
    
        def init_app(app):
            app.config.update(
                LOGIN_DISABLED=False,
                MAIL_SUPPRESS_SEND=True,
                OAUTH2_CACHE_TYPE='simple',
                OAUTHLIB_INSECURE_TRANSPORT=True,
                SECRET_KEY='CHANGE_ME',
                SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
                SECURITY_PASSWORD_HASH='plaintext',
                SECURITY_PASSWORD_SALT='CHANGE_ME_ALSO',
                SECURITY_PASSWORD_SCHEMES=['plaintext'],
                # SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                #                                   'sqlite:///test.db'),
                SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                              'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
                SQLALCHEMY_TRACK_MODIFICATIONS=True,
                TESTING=True,
                WTF_CSRF_ENABLED=False,
            )
            Babel(app)
            Mail(app)
            Menu(app)
            Breadcrumbs(app)
            InvenioDB(app)
            InvenioOAuth2Server(app)
    
        api_app = Flask('testapiapp', instance_path=instance_path)
        api_app.config.update(
            APPLICATION_ROOT='/api',
            ACCOUNTS_REGISTER_BLUEPRINT=True
        )
>       init_app(api_app)

tests/conftest.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:71: in init_app
    InvenioDB(app)
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2465: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2471: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-workflow/weko_workflow/__init__.py:23: in <module>
    from .ext import WekoWorkflow
../weko-workflow/weko_workflow/ext.py:23: in <module>
    from weko_deposit.signals import item_created
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
=============================== warnings summary ===============================
tests/test_admin.py::test_admin
  /code/modules/invenio-oauth2server/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/specifiers.py:276: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_cli.py::test_cli_tokens
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_oauthlib_urldecode_issue
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test1
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_api_auth_test2
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test1
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_test2
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_require_oauth_scopes_allow_anonymous
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_rest_extension
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_access_login_required
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_decorators.py::test_jwt_client
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_empty_redirect_uri_and_scope
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_token_scopes
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_registering_invalid_scope
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_consumer_resource_owner
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_resource_owner_consumer
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_client1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token1
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_models.py::test_deletion_of_token2
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_client_salt
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_invalid_authorize_requests
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_refresh_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_implicit_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_client_flow
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_auth_flow_denied
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_personal_access_token
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_resource_auth_methods
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=RegularArg-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[a=1&b=2&c=3-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=text+with+spaces-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=title:TheTitle-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=properly%20encoded%24-True]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[$type=search-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[q=Joan+D'Arc-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[with regular spaces-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[json_data={a: 42}-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_urldecoding_issue[array=[1, 2, 3]-False]
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_oauthlib_monkeypatch
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_settings_index
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_info_not_accessible_in_production
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_expired_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_not_allowed_public_refresh_flow
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_password_grant_type
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_provider.py::test_email_scope
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_server.py::test_user_identity_init
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_personal_token_management
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_authorized_app_revocation
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_settings.py::test_client_management
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_utils.py::test_rebuilding_access_tokens
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
tests/test_validators.py::test_url_validator
  /code/modules/invenio-oauth2server/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/version.py:114: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                     Stmts   Miss Branch BrPart  Cover
--------------------------------------------------------------------------
invenio_oauth2server/__init__.py             7      0      0      0   100%
invenio_oauth2server/admin.py               24      0      4      0   100%
invenio_oauth2server/cli.py                 52     24     14      0    42%
invenio_oauth2server/config.py              15      0      0      0   100%
invenio_oauth2server/decorators.py          35     14     12      0    45%
invenio_oauth2server/errors.py              40     12     22      0    71%
invenio_oauth2server/ext.py                110     62     54      1    36%
invenio_oauth2server/forms.py               55     28     26      0    48%
invenio_oauth2server/models.py             141     60     30      0    53%
invenio_oauth2server/provider.py            54     37     18      1    25%
invenio_oauth2server/proxies.py              5      0      2      0   100%
invenio_oauth2server/scopes.py               6      0      0      0   100%
invenio_oauth2server/utils.py               31     19     10      0    29%
invenio_oauth2server/validators.py          28      9     16      2    61%
invenio_oauth2server/version.py              3      0      0      0   100%
invenio_oauth2server/views/__init__.py       5      0      0      0   100%
invenio_oauth2server/views/server.py        84     51     20      0    32%
invenio_oauth2server/views/settings.py     158    107     32      1    27%
--------------------------------------------------------------------------
TOTAL                                      853    423    260      5    44%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml

======== 9 passed, 1 skipped, 1201 warnings, 50 error in 25.06 seconds =========
ERROR: InvocationError for command /code/modules/invenio-oauth2server/.tox/c1/bin/pytest --cov=invenio_oauth2server tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/invenio-oauth2server/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
