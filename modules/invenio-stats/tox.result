GLOB sdist-make: /code/modules/invenio-stats/setup.py
c1 create: /code/modules/invenio-stats/.tox/c1
c1 installdeps: pytest>=3, pytest-cov, coverage, -rrequirements.txt
c1 inst: /code/modules/invenio-stats/.tox/.tmp/package/1/invenio-stats-1.0.0a10.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.1,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.7,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==8.0.4,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,Flask==1.0.4,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.3.3,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.11.0,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,Flask-OAuthlib==0.9.5,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.1.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.10,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,iniconfig==1.1.1,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=invenio_s3&subdirectory=modules/invenio-s3,invenio-search==1.1.0,invenio-search-ui==1.0.0a9,invenio-stats @ file:///code/modules/invenio-stats/.tox/.tmp/package/1/invenio-stats-1.0.0a10.zip,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==3.0.5,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.1,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==6.1.2,pytest-cov==4.0.0,pytest-mock==3.6.1,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.12.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,testpath==0.3.1,toml==0.10.2,tomli==1.2.3,tornado==4.5.3,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,validators==0.12.0,vine==1.3.0,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://github.com/RCOSDP/weko.git@2e33db91047d62a161687c8fef10a8e2dd670b28#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='2520227138'
c1 run-test: commands[0] | pytest --cov=invenio_stats tests -v -vv --cov-branch --cov-report=term --cov-report=xml --cov-report=html --cov-config=tox.ini --basetemp=/code/modules/invenio-stats/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-6.1.2, py-1.11.0, pluggy-0.13.1 -- /code/modules/invenio-stats/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/invenio-stats
plugins: celery-4.4.7, mock-3.6.1, cov-4.0.0
collecting ... collected 129 items

tests/test_aggregations.py::test_BookmarkAPI ERROR                       [  0%]
tests/test_aggregations.py::test_wrong_intervals ERROR                   [  1%]
tests/test_aggregations.py::test_StatAggregator ERROR                    [  2%]
tests/test_cli.py::test_events_process ERROR                             [  3%]
tests/test_cli.py::test_events_delete_restore ERROR                      [  3%]
tests/test_cli.py::test_aggregations_process[indexed_file_download_events0] ERROR [  4%]
tests/test_cli.py::test_aggregations_delete[aggregated_file_download_events0] ERROR [  5%]
tests/test_cli.py::test_aggregations_list_bookmarks[aggregated_file_download_events0] ERROR [  6%]
tests/test_cli.py::test_aggregations_deleteindex_restore ERROR           [  6%]
tests/test_cli.py::test_partition_create ERROR                           [  7%]
tests/test_event_builders.py::test_celery_task_event_builder ERROR       [  8%]
tests/test_event_builders.py::test_file_download_event_builder ERROR     [  9%]
tests/test_event_builders.py::test_build_celery_task_unique_id ERROR     [ 10%]
tests/test_event_builders.py::test_copy_record_index_list ERROR          [ 10%]
tests/test_event_builders.py::test_copy_user_group_list ERROR            [ 11%]
tests/test_event_builders.py::test_copy_search_keyword ERROR             [ 12%]
tests/test_event_builders.py::test_copy_search_type ERROR                [ 13%]
tests/test_event_builders.py::test_record_view_event_builder ERROR       [ 13%]
tests/test_event_builders.py::test_top_view_event_builder ERROR          [ 14%]
tests/test_event_builders.py::test_build_top_unique_id ERROR             [ 15%]
tests/test_event_builders.py::test_build_item_create_unique_id ERROR     [ 16%]
tests/test_event_builders.py::test_resolve_address ERROR                 [ 17%]
tests/test_event_builders.py::test_search_event_builder ERROR            [ 17%]
tests/test_event_builders.py::test_build_search_unique_id ERROR          [ 18%]
tests/test_event_builders.py::test_build_search_detail_condition ERROR   [ 19%]
tests/test_event_builders.py::test_item_create_event_builder ERROR       [ 20%]
tests/test_events.py::test_event_queues_declare SKIPPED                  [ 20%]
tests/test_events.py::test_publish_and_consume_events SKIPPED            [ 21%]
tests/test_invenio_stats.py::test_version PASSED                         [ 22%]
tests/test_invenio_stats.py::test_init FAILED                            [ 23%]
tests/test_models.py::test_StatsEvents ERROR                             [ 24%]
tests/test_models.py::test_StatsAggregation ERROR                        [ 24%]
tests/test_models.py::test_StatsBookmark ERROR                           [ 25%]
tests/test_models.py::test_get_stats_events_partition_tables ERROR       [ 26%]
tests/test_models.py::test_make_stats_events_partition_table ERROR       [ 27%]
tests/test_processors.py::test_anonymize_user[131.169.180.47-None-None-None-timestamp0-DE-1850abef504ce64cb6b38fa60fe8f90aede1d2d2e9013735554af946-1850abef504ce64cb6b38fa60fe8f90aede1d2d2e9013735554af946] PASSED [ 27%]
tests/test_processors.py::test_anonymize_user[188.184.37.205-100-None-None-timestamp1-CH-eaf6a44a598ea63c659e6e46722e2d11d0d7487694ec504ade273b9d-c6b85f117cd0636a07f1cf250a30d86714ec45e55a1110441d1a9e2b] PASSED [ 28%]
tests/test_processors.py::test_anonymize_user[23.22.39.120-100-foo-bar-timestamp2-US-eaf6a44a598ea63c659e6e46722e2d11d0d7487694ec504ade273b9d-c6b85f117cd0636a07f1cf250a30d86714ec45e55a1110441d1a9e2b] PASSED [ 29%]
tests/test_processors.py::test_anonymize_user[23.22.39.120-100-None-None-timestamp3-US-eaf6a44a598ea63c659e6e46722e2d11d0d7487694ec504ade273b9d-77536991d991e6e8251999fc6a8d78ec1be42847da3c8774221a03a0] PASSED [ 30%]
tests/test_processors.py::test_anonymize_user[23.22.39.120-100-None-None-timestamp4-US-eaf6a44a598ea63c659e6e46722e2d11d0d7487694ec504ade273b9d-77536991d991e6e8251999fc6a8d78ec1be42847da3c8774221a03a0] PASSED [ 31%]
tests/test_processors.py::test_anonymize_user[131.169.180.47-None-foo-None-timestamp5-DE-a78cc092c88fb4d060a873217f2cd466c2776f672a99ee06317c2858-ca28702a6ece34d18c6f6498ef79d77492a6bd653ac886beb5018880] PASSED [ 31%]
tests/test_processors.py::test_anonymize_user[131.169.180.47-None-foo-bar-timestamp6-DE-a78cc092c88fb4d060a873217f2cd466c2776f672a99ee06317c2858-ca28702a6ece34d18c6f6498ef79d77492a6bd653ac886beb5018880] PASSED [ 32%]
tests/test_processors.py::test_anonymize_user[131.169.180.47-None-foo-bar-timestamp7-DE-a78cc092c88fb4d060a873217f2cd466c2776f672a99ee06317c2858-ceb752c8b51c8c4a9c18a9d4404e9fb570fbf83195631ab3efb46b31] PASSED [ 33%]
tests/test_processors.py::test_anonymize_user[188.184.37.205-None-None-bar-timestamp8-CH-e9c48686d21c21a9ee5b9eba58b1d86c9460272809b6de71649f6ce7-e9c48686d21c21a9ee5b9eba58b1d86c9460272809b6de71649f6ce7] PASSED [ 34%]
tests/test_processors.py::test_anonymize_user[131.169.180.47-None-None-bar-timestamp9-DE-602e9bc738b422d5a19283e20fc31ec540a12d42b04ad7073d943fb2-602e9bc738b422d5a19283e20fc31ec540a12d42b04ad7073d943fb2] PASSED [ 34%]
tests/test_processors.py::test_anonymize_user[131.169.180.47-None-None-bar-timestamp10-DE-4b30c060f422f304b073759553d4161a14784e0ddcf57284f55d7cae-4b30c060f422f304b073759553d4161a14784e0ddcf57284f55d7cae] PASSED [ 35%]
tests/test_processors.py::test_anonymize_user[0.0.0.0-None-None-None-timestamp11-None-1850abef504ce64cb6b38fa60fe8f90aede1d2d2e9013735554af946-1850abef504ce64cb6b38fa60fe8f90aede1d2d2e9013735554af946] PASSED [ 36%]
tests/test_processors.py::test_anonymiation_salt ERROR                   [ 37%]
tests/test_processors.py::test_events_indexer_preprocessors ERROR        [ 37%]
tests/test_processors.py::test_events_indexer_id_windowing ERROR         [ 38%]
tests/test_processors.py::test_double_clicks ERROR                       [ 39%]
tests/test_processors.py::test_failing_processors SKIPPED                [ 40%]
tests/test_queries.py::test_query ERROR                                  [ 41%]
tests/test_queries.py::test_date_histogram_query ERROR                   [ 41%]
tests/test_queries.py::test_terms_query[mock_execute0-1-tests/data/ESTermsQuery_result01.json-aggregated_file_download_events0] ERROR [ 42%]
tests/test_queries.py::test_terms_query[mock_execute1-1-tests/data/ESTermsQuery_result02.json-aggregated_file_download_events0] ERROR [ 43%]
tests/test_queries.py::test_terms_query[mock_execute2-16-tests/data/ESTermsQuery_result03.json-aggregated_file_download_events0] ERROR [ 44%]
tests/test_queries.py::test_terms_query2 ERROR                           [ 44%]
tests/test_queries.py::test_weko_file_stats_query ERROR                  [ 45%]
tests/test_queries.py::test_weko_terms_query ERROR                       [ 46%]
tests/test_receivers.py::test_register_receivers SKIPPED                 [ 47%]
tests/test_receivers.py::test_failing_receiver SKIPPED                   [ 48%]
tests/test_tasks.py::test_process_events ERROR                           [ 48%]
tests/test_utils.py::test_get_anonymization_salt ERROR                   [ 49%]
tests/test_utils.py::test_get_geoip PASSED                               [ 50%]
tests/test_utils.py::test_get_user ERROR                                 [ 51%]
tests/test_utils.py::test_obj_or_import_string ERROR                     [ 51%]
tests/test_utils.py::test_load_or_import_from_config ERROR               [ 52%]
tests/test_utils.py::test_default_permission_factory ERROR               [ 53%]
tests/test_utils.py::test_get_aggregations ERROR                         [ 54%]
tests/test_utils.py::test_get_start_end_date ERROR                       [ 55%]
tests/test_utils.py::test_agg_bucket_sort ERROR                          [ 55%]
tests/test_utils.py::test_parse_bucket_response ERROR                    [ 56%]
tests/test_utils.py::test_get_doctype ERROR                              [ 57%]
tests/test_utils.py::test_is_valid_access ERROR                          [ 58%]
tests/test_utils.py::test_query_file_reports_helper[aggregated_file_download_events0] ERROR [ 58%]
tests/test_utils.py::test_query_file_reports_helper_error ERROR          [ 59%]
tests/test_utils.py::test_query_search_report_helper ERROR               [ 60%]
tests/test_utils.py::test_query_search_report_helper_error ERROR         [ 61%]
tests/test_utils.py::test_query_common_reports_helper ERROR              [ 62%]
tests/test_utils.py::test_query_common_reports_helper_error ERROR        [ 62%]
tests/test_utils.py::test_query_record_view_per_index_report_helper ERROR [ 63%]
tests/test_utils.py::test_query_record_view_per_index_report_helper_error ERROR [ 64%]
tests/test_utils.py::test_query_record_view_report_helper ERROR          [ 65%]
tests/test_utils.py::test_query_record_view_report_helper_error ERROR    [ 65%]
tests/test_utils.py::test_query_item_reg_report_helper ERROR             [ 66%]
tests/test_utils.py::test_query_item_reg_report_helper_error ERROR       [ 67%]
tests/test_utils.py::test_query_ranking_helper ERROR                     [ 68%]
tests/test_utils.py::test_query_ranking_helper_error ERROR               [ 68%]
tests/test_utils.py::test_StatsCliUtil ERROR                             [ 69%]
tests/test_views.py::test_stats_query_resource_guest ERROR               [ 70%]
tests/test_views.py::test_stats_query_resource_com ERROR                 [ 71%]
tests/test_views.py::test_stats_query_resource_admin ERROR               [ 72%]
tests/test_views.py::test_stats_query_resource_error ERROR               [ 72%]
tests/test_views.py::test_query_record_view_count ERROR                  [ 73%]
tests/test_views.py::test_query_record_view_count_error ERROR            [ 74%]
tests/test_views.py::test_query_file_stats_count ERROR                   [ 75%]
tests/test_views.py::test_query_item_reg_report[0-403] ERROR             [ 75%]
tests/test_views.py::test_query_item_reg_report[1-200] ERROR             [ 76%]
tests/test_views.py::test_query_item_reg_report[2-200] ERROR             [ 77%]
tests/test_views.py::test_query_item_reg_report[3-403] ERROR             [ 78%]
tests/test_views.py::test_query_item_reg_report[4-403] ERROR             [ 79%]
tests/test_views.py::test_query_record_view_report[0-403] ERROR          [ 79%]
tests/test_views.py::test_query_record_view_report[1-200] ERROR          [ 80%]
tests/test_views.py::test_query_record_view_report[2-200] ERROR          [ 81%]
tests/test_views.py::test_query_record_view_report[3-403] ERROR          [ 82%]
tests/test_views.py::test_query_record_view_report[4-403] ERROR          [ 82%]
tests/test_views.py::test_query_record_view_per_index_report[0-403] ERROR [ 83%]
tests/test_views.py::test_query_record_view_per_index_report[1-200] ERROR [ 84%]
tests/test_views.py::test_query_record_view_per_index_report[2-200] ERROR [ 85%]
tests/test_views.py::test_query_record_view_per_index_report[3-403] ERROR [ 86%]
tests/test_views.py::test_query_record_view_per_index_report[4-403] ERROR [ 86%]
tests/test_views.py::test_query_file_reports[0-403] ERROR                [ 87%]
tests/test_views.py::test_query_file_reports[1-200] ERROR                [ 88%]
tests/test_views.py::test_query_file_reports[2-200] ERROR                [ 89%]
tests/test_views.py::test_query_file_reports[3-403] ERROR                [ 89%]
tests/test_views.py::test_query_file_reports[4-403] ERROR                [ 90%]
tests/test_views.py::test_query_common_reports ERROR                     [ 91%]
tests/test_views.py::test_query_celery_task_report[0-403] ERROR          [ 92%]
tests/test_views.py::test_query_celery_task_report[1-200] ERROR          [ 93%]
tests/test_views.py::test_query_celery_task_report[2-200] ERROR          [ 93%]
tests/test_views.py::test_query_celery_task_report[3-403] ERROR          [ 94%]
tests/test_views.py::test_query_celery_task_report[4-403] ERROR          [ 95%]
tests/test_views.py::test_query_search_report[0-403] ERROR               [ 96%]
tests/test_views.py::test_query_search_report[1-200] ERROR               [ 96%]
tests/test_views.py::test_query_search_report[2-200] ERROR               [ 97%]
tests/test_views.py::test_query_search_report[3-403] ERROR               [ 98%]
tests/test_views.py::test_query_search_report[4-403] ERROR               [ 99%]
tests/test_views.py::test_dbsession_clean ERROR                          [100%]

==================================== ERRORS ====================================
______________________ ERROR at setup of test_BookmarkAPI ______________________

instance_path = '/var/tmp/tmpaooflews', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_wrong_intervals ____________________

instance_path = '/var/tmp/tmpvefeos7r', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_StatAggregator _____________________

instance_path = '/var/tmp/tmpmqv9vqp5', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_events_process _____________________

instance_path = '/var/tmp/tmpfo68nq29', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_events_delete_restore _________________

instance_path = '/var/tmp/tmp3df9se5f', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__ ERROR at setup of test_aggregations_process[indexed_file_download_events0] __

instance_path = '/var/tmp/tmprihtuwmn', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_aggregations_delete[aggregated_file_download_events0] _

instance_path = '/var/tmp/tmpob44y4pe', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_aggregations_list_bookmarks[aggregated_file_download_events0] _

instance_path = '/var/tmp/tmpwlkr5oet', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_aggregations_deleteindex_restore ____________

instance_path = '/var/tmp/tmpvkrcor80', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_partition_create ____________________

instance_path = '/var/tmp/tmpokgis_q8', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_celery_task_event_builder _______________

instance_path = '/var/tmp/tmpxdry26p9', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_file_download_event_builder ______________

instance_path = '/var/tmp/tmponyo9ls7', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_build_celery_task_unique_id ______________

instance_path = '/var/tmp/tmpk_0_21dx', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_copy_record_index_list _________________

instance_path = '/var/tmp/tmpgtuxhme8', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_copy_user_group_list __________________

instance_path = '/var/tmp/tmp3jsfp7xh', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_copy_search_keyword __________________

instance_path = '/var/tmp/tmp4svvj3fb', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_copy_search_type ____________________

instance_path = '/var/tmp/tmpj2_z9nga', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_record_view_event_builder _______________

instance_path = '/var/tmp/tmpveyxkfui', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_top_view_event_builder _________________

instance_path = '/var/tmp/tmp823ifgr1', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_build_top_unique_id __________________

instance_path = '/var/tmp/tmpm8d4_r7r', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_build_item_create_unique_id ______________

instance_path = '/var/tmp/tmpyzxdyi1p', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_resolve_address ____________________

instance_path = '/var/tmp/tmpm3beur2c', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_search_event_builder __________________

instance_path = '/var/tmp/tmpvd3d1qb6', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_build_search_unique_id _________________

instance_path = '/var/tmp/tmp57t3anil', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_build_search_detail_condition _____________

instance_path = '/var/tmp/tmpgzryjbqk', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_item_create_event_builder _______________

instance_path = '/var/tmp/tmpi75gbef4', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_StatsEvents ______________________

instance_path = '/var/tmp/tmp8svb73pe', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_StatsAggregation ____________________

instance_path = '/var/tmp/tmp0xfh4u51', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_StatsBookmark _____________________

instance_path = '/var/tmp/tmp8sx8i6oe', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_get_stats_events_partition_tables ___________

instance_path = '/var/tmp/tmphkx59g21', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_make_stats_events_partition_table ___________

instance_path = '/var/tmp/tmpil7w39hg', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_anonymiation_salt ___________________

instance_path = '/var/tmp/tmphoj_mdys', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_events_indexer_preprocessors ______________

instance_path = '/var/tmp/tmp4ugd5w7j', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_events_indexer_id_windowing ______________

instance_path = '/var/tmp/tmpudxe656h', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_double_clicks _____________________

instance_path = '/var/tmp/tmpzioaiaos', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________________ ERROR at setup of test_query _________________________

instance_path = '/var/tmp/tmpb_ceuk80', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_date_histogram_query __________________

instance_path = '/var/tmp/tmp1unlab3t', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_terms_query[mock_execute0-1-tests/data/ESTermsQuery_result01.json-aggregated_file_download_events0] _

instance_path = '/var/tmp/tmpugy8t7m7', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_terms_query[mock_execute1-1-tests/data/ESTermsQuery_result02.json-aggregated_file_download_events0] _

instance_path = '/var/tmp/tmpcqqcitb0', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_terms_query[mock_execute2-16-tests/data/ESTermsQuery_result03.json-aggregated_file_download_events0] _

instance_path = '/var/tmp/tmp7_1hc988', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_terms_query2 ______________________

instance_path = '/var/tmp/tmp_u8dayc0', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_weko_file_stats_query _________________

instance_path = '/var/tmp/tmp2vzqv463', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_weko_terms_query ____________________

instance_path = '/var/tmp/tmpb50xorvm', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_process_events _____________________

instance_path = '/var/tmp/tmpgypjlg1y', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_get_anonymization_salt _________________

instance_path = '/var/tmp/tmp75658exe', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_get_user ________________________

instance_path = '/var/tmp/tmp3_x07suo', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_obj_or_import_string __________________

instance_path = '/var/tmp/tmp1zcpax2f', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_load_or_import_from_config _______________

instance_path = '/var/tmp/tmp2qgu6md_', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_default_permission_factory _______________

instance_path = '/var/tmp/tmpkd4s0vs1', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_get_aggregations ____________________

instance_path = '/var/tmp/tmpwyyrihjq', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_get_start_end_date ___________________

instance_path = '/var/tmp/tmphhnuotz2', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_agg_bucket_sort ____________________

instance_path = '/var/tmp/tmp_lg8hr7t', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_parse_bucket_response _________________

instance_path = '/var/tmp/tmpj9dm8zjx', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________________ ERROR at setup of test_get_doctype ______________________

instance_path = '/var/tmp/tmpd2al020_', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_is_valid_access ____________________

instance_path = '/var/tmp/tmp8537lr5v', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of test_query_file_reports_helper[aggregated_file_download_events0] _

instance_path = '/var/tmp/tmpuvkqjnwj', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_file_reports_helper_error ____________

instance_path = '/var/tmp/tmpvwpnxd05', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_search_report_helper _______________

instance_path = '/var/tmp/tmpu409m8cl', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_query_search_report_helper_error ____________

instance_path = '/var/tmp/tmpph537pb9', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_common_reports_helper ______________

instance_path = '/var/tmp/tmpn2vpxr_x', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of test_query_common_reports_helper_error ___________

instance_path = '/var/tmp/tmp2d2k8bgd', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_query_record_view_per_index_report_helper _______

instance_path = '/var/tmp/tmp9vxvvb_m', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____ ERROR at setup of test_query_record_view_per_index_report_helper_error ____

instance_path = '/var/tmp/tmpzg_aaoon', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_record_view_report_helper ____________

instance_path = '/var/tmp/tmp1g0lc_bl', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________ ERROR at setup of test_query_record_view_report_helper_error _________

instance_path = '/var/tmp/tmpvt1tu_f0', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_item_reg_report_helper ______________

instance_path = '/var/tmp/tmp2dmxh0wy', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________ ERROR at setup of test_query_item_reg_report_helper_error ___________

instance_path = '/var/tmp/tmp6czuz0c0', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_query_ranking_helper __________________

instance_path = '/var/tmp/tmpzn0x902j', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_ranking_helper_error _______________

instance_path = '/var/tmp/tmpblznz_m7', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________________ ERROR at setup of test_StatsCliUtil ______________________

instance_path = '/var/tmp/tmpnus75m_8', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_stats_query_resource_guest _______________

instance_path = '/var/tmp/tmpox8ktu0l', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_stats_query_resource_com ________________

instance_path = '/var/tmp/tmp4egc7de2', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_stats_query_resource_admin _______________

instance_path = '/var/tmp/tmpzj94oyzp', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_stats_query_resource_error _______________

instance_path = '/var/tmp/tmphyhezbx6', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_query_record_view_count ________________

instance_path = '/var/tmp/tmpskxwk9nx', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_record_view_count_error _____________

instance_path = '/var/tmp/tmplgnzwam1', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_query_file_stats_count _________________

instance_path = '/var/tmp/tmpbanl8zvj', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_item_reg_report[0-403] ______________

instance_path = '/var/tmp/tmprlrp_2_9', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_item_reg_report[1-200] ______________

instance_path = '/var/tmp/tmp5g94ndkg', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_item_reg_report[2-200] ______________

instance_path = '/var/tmp/tmpl1_rihgc', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_item_reg_report[3-403] ______________

instance_path = '/var/tmp/tmp1mw1znah', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of test_query_item_reg_report[4-403] ______________

instance_path = '/var/tmp/tmp6nnb3h4w', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_record_view_report[0-403] ____________

instance_path = '/var/tmp/tmp08qjansq', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_record_view_report[1-200] ____________

instance_path = '/var/tmp/tmplnfdg7r0', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_record_view_report[2-200] ____________

instance_path = '/var/tmp/tmps4a86_b5', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_record_view_report[3-403] ____________

instance_path = '/var/tmp/tmp7osh7hqh', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_record_view_report[4-403] ____________

instance_path = '/var/tmp/tmphy816mrm', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_query_record_view_per_index_report[0-403] _______

instance_path = '/var/tmp/tmp3hpa99hr', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_query_record_view_per_index_report[1-200] _______

instance_path = '/var/tmp/tmpoebql8q5', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_query_record_view_per_index_report[2-200] _______

instance_path = '/var/tmp/tmpzlny9ojq', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_query_record_view_per_index_report[3-403] _______

instance_path = '/var/tmp/tmpbkkvcrhz', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of test_query_record_view_per_index_report[4-403] _______

instance_path = '/var/tmp/tmp_ewoq62o', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_query_file_reports[0-403] _______________

instance_path = '/var/tmp/tmpests4phb', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_query_file_reports[1-200] _______________

instance_path = '/var/tmp/tmpjooyouf6', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_query_file_reports[2-200] _______________

instance_path = '/var/tmp/tmpoec1wv8_', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_query_file_reports[3-403] _______________

instance_path = '/var/tmp/tmpb4q8upf0', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of test_query_file_reports[4-403] _______________

instance_path = '/var/tmp/tmp0d8vlk5m', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_query_common_reports __________________

instance_path = '/var/tmp/tmpyb2d7zqo', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_celery_task_report[0-403] ____________

instance_path = '/var/tmp/tmpzexng28t', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_celery_task_report[1-200] ____________

instance_path = '/var/tmp/tmpyl8ifia_', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_celery_task_report[2-200] ____________

instance_path = '/var/tmp/tmpujcvh5i5', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_celery_task_report[3-403] ____________

instance_path = '/var/tmp/tmp6bgqrkhx', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of test_query_celery_task_report[4-403] ____________

instance_path = '/var/tmp/tmpxt1cmv63', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_search_report[0-403] _______________

instance_path = '/var/tmp/tmpyxty1o4p', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_search_report[1-200] _______________

instance_path = '/var/tmp/tmp931n0pv3', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_search_report[2-200] _______________

instance_path = '/var/tmp/tmpa8yvc11m', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_search_report[3-403] _______________

instance_path = '/var/tmp/tmp_elsiv1r', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_query_search_report[4-403] _______________

instance_path = '/var/tmp/tmpny99n4tw', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_dbsession_clean ____________________

instance_path = '/var/tmp/tmp7n0upsve', mock_gethostbyaddr = None

    @pytest.fixture()
    def base_app(instance_path, mock_gethostbyaddr):
        """Flask application fixture without InvenioStats."""
        app_ = Flask('testapp', instance_path=instance_path)
        stats_events = {
            'file-download': deepcopy(STATS_EVENTS['file-download']),
            'record-view': {
                'signal': 'invenio_records_ui.signals.record_viewed',
                'event_builders': ['invenio_stats.contrib.event_builders'
                                   '.record_view_event_builder']
            }
        }
        stats_events.update({'event_{}'.format(idx): {} for idx in range(5)})
        app_.config.update(dict(
            CELERY_ALWAYS_EAGER=True,
            CELERY_TASK_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND='memory',
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_TASK_EAGER_PROPAGATES=True,
            CELERY_RESULT_BACKEND='cache',
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            QUEUES_BROKER_URL="amqp://guest:guest@rabbitmq:5672//",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     'SQLALCHEMY_DATABASE_URI', 'sqlite://'),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SEARCH_ELASTIC_HOSTS=os.environ.get(
                'SEARCH_ELASTIC_HOSTS', 'elasticsearch'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            TESTING=True,
            OAUTH2SERVER_CLIENT_ID_SALT_LEN=64,
            OAUTH2SERVER_CLIENT_SECRET_SALT_LEN=60,
            OAUTH2SERVER_TOKEN_PERSONAL_SALT_LEN=60,
            OAUTH2_CACHE_TYPE="simple",
            SEARCH_INDEX_PREFIX='test-',
            STATS_MQ_EXCHANGE=Exchange(
                'test_events',
                type='direct',
                delivery_mode='transient',  # in-memory queue
                durable=True,
            ),
            SECRET_KEY='asecretkey',
            SERVER_NAME='localhost',
            PIDRELATIONS_RELATION_TYPES=PIDRELATIONS_RELATION_TYPES,
            STATS_QUERIES=STATS_QUERIES,
            STATS_EVENTS=stats_events,
            STATS_AGGREGATIONS=STATS_AGGREGATIONS,
            INDEXER_MQ_QUEUE = Queue("indexer", exchange=Exchange("indexer", type="direct"), routing_key="indexer",queue_arguments={"x-queue-type":"quorum"})
        ))
        FlaskCeleryExt(app_)
>       InvenioAccess(app_)

tests/conftest.py:287: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:25: in <module>
    from .views import blueprint
../weko-search-ui/weko_search_ui/views.py:38: in <module>
    from weko_gridlayout.utils import (
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:22: in <module>
    from weko_theme.utils import get_community_id, get_weko_contents
../weko-theme/weko_theme/__init__.py:23: in <module>
    from .ext import WekoTheme
../weko-theme/weko_theme/ext.py:27: in <module>
    from .views import blueprint
../weko-theme/weko_theme/views.py:33: in <module>
    from weko_records_ui.ipaddr import check_site_license_permission
../weko-records-ui/weko_records_ui/__init__.py:23: in <module>
    from .ext import WekoRecordsCitesREST, WekoRecordsUI
../weko-records-ui/weko_records_ui/ext.py:23: in <module>
    from . import config
../weko-records-ui/weko_records_ui/config.py:27: in <module>
    from .views import blueprint
../weko-records-ui/weko_records_ui/views.py:40: in <module>
    from invenio_oaiserver.response import getrecord
../invenio-oaiserver/invenio_oaiserver/response.py:26: in <module>
    from weko_deposit.api import WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
=================================== FAILURES ===================================
__________________________________ test_init ___________________________________

import_name = 'weko_deposit.signals.item_created', silent = False

    def import_string(import_name, silent=False):
        """Imports an object based on a string.  This is useful if you want to
        use import paths as endpoints or something similar.  An import path can
        be specified either in dotted notation (``xml.sax.saxutils.escape``)
        or with a colon as object delimiter (``xml.sax.saxutils:escape``).
    
        If `silent` is True the return value will be `None` if the import fails.
    
        :param import_name: the dotted name for the object to import.
        :param silent: if set to `True` import errors are ignored and
                       `None` is returned instead.
        :return: imported object
        """
        # force the import name to automatically convert to strings
        # __import__ is not able to handle unicode strings in the fromlist
        # if the module is a package
        import_name = str(import_name).replace(":", ".")
        try:
            try:
                __import__(import_name)
            except ImportError:
                if "." not in import_name:
                    raise
            else:
                return sys.modules[import_name]
    
            module_name, obj_name = import_name.rsplit(".", 1)
>           module = __import__(module_name, globals(), locals(), [obj_name])

.tox/c1/lib/python3.6/site-packages/werkzeug/utils.py:555: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Module of weko-deposit."""
    
>   from .ext import WekoDeposit, WekoDepositREST

../weko-deposit/weko_deposit/__init__.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Flask extension for weko-deposit."""
    
    from invenio_indexer.signals import before_record_index
    
    from . import config
>   from .receivers import append_file_content

../weko-deposit/weko_deposit/ext.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Deposit module receivers."""
    
    from flask import current_app
    from invenio_pidstore.models import PIDStatus
    from invenio_records.models import RecordMetadata
    from weko_records.api import FeedbackMailList
    from weko_records.utils import json_loader
    
>   from .api import WekoDeposit

../weko-deposit/weko_deposit/receivers.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError

During handling of the above exception, another exception occurred:

    def test_init():
        """Test extension initialization."""
        app = Flask('testapp')
>       ext = InvenioStats(app)

tests/test_invenio_stats.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
invenio_stats/ext.py:207: in __init__
    self.init_app(app, **kwargs)
invenio_stats/ext.py:228: in init_app
    register_receivers(app, signal_receivers)
invenio_stats/receivers.py:50: in register_receivers
    signal = obj_or_import_string(event_config['signal'])
invenio_stats/utils.py:95: in obj_or_import_string
    return import_string(value)
.tox/c1/lib/python3.6/site-packages/werkzeug/utils.py:564: in import_string
    ImportStringError, ImportStringError(import_name, e), sys.exc_info()[2]
.tox/c1/lib/python3.6/site-packages/werkzeug/_compat.py:147: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/werkzeug/utils.py:555: in import_string
    module = __import__(module_name, globals(), locals(), [obj_name])
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   werkzeug.utils.ImportStringError: import_string() failed for 'weko_deposit.signals.item_created'. Possible reasons are:
E   
E   - missing __init__.py in a package;
E   - package or module path not included in sys.path;
E   - duplicated package or module name taking precedence in sys.path;
E   - missing module, class, function or variable;
E   
E   Debugged import:
E   
E   - 'weko_deposit' not found.
E   
E   Original exception:
E   
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ImportStringError
=============================== warnings summary ===============================
.tox/c1/lib/python3.6/site-packages/flask_oauthlib/contrib/cache.py:3
  /code/modules/invenio-stats/.tox/c1/lib/python3.6/site-packages/flask_oauthlib/contrib/cache.py:3: DeprecationWarning: 'werkzeug.contrib.cache' is deprecated as of version 0.15 and will be removed in version 1.0. It has moved to https://github.com/pallets/cachelib.
    from werkzeug.contrib.cache import NullCache, SimpleCache, FileSystemCache

../invenio-indexer/invenio_indexer/cli.py:168
  /code/modules/invenio-indexer/invenio_indexer/cli.py:168: DeprecationWarning: 'resultcallback' has been renamed to 'result_callback'. The old name will be removed in Click 8.1.
    @queue.resultcallback()

-- Docs: https://docs.pytest.org/en/stable/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                                                Stmts   Miss Branch BrPart  Cover
-----------------------------------------------------------------------------------------------------
invenio_stats/__init__.py                                               6      0      0      0   100%
invenio_stats/aggregations.py                                         186    146     73      0    17%
invenio_stats/cli.py                                                  173     79     34      0    45%
invenio_stats/config.py                                                26      0      0      0   100%
invenio_stats/contrib/__init__.py                                       1      0      0      0   100%
invenio_stats/contrib/aggregations/__init__.py                          1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_celery_task/__init__.py         1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_file_download/__init__.py       1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_file_preview/__init__.py        1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_item_create/__init__.py         1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_record_view/__init__.py         1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_search/__init__.py              1      1      0      0     0%
invenio_stats/contrib/aggregations/aggr_top_view/__init__.py            1      1      0      0     0%
invenio_stats/contrib/celery_task/__init__.py                           1      1      0      0     0%
invenio_stats/contrib/event_builders.py                               124     97     42      0    16%
invenio_stats/contrib/file_download/__init__.py                         1      1      0      0     0%
invenio_stats/contrib/file_preview/__init__.py                          1      1      0      0     0%
invenio_stats/contrib/item_create/__init__.py                           1      1      0      0     0%
invenio_stats/contrib/record_view/__init__.py                           1      1      0      0     0%
invenio_stats/contrib/registrations.py                                 15      4      0      0    73%
invenio_stats/contrib/search/__init__.py                                1      1      0      0     0%
invenio_stats/contrib/top_view/__init__.py                              1      1      0      0     0%
invenio_stats/errors.py                                                20      5     16      0    86%
invenio_stats/ext.py                                                  110     65     56      2    34%
invenio_stats/models.py                                               112     59     22      1    46%
invenio_stats/permissions.py                                            4      0      0      0   100%
invenio_stats/processors.py                                            95     40     32      1    55%
invenio_stats/proxies.py                                                5      0      2      0   100%
invenio_stats/queries.py                                              317    280    173      0    10%
invenio_stats/queues.py                                                 4      4      2      0     0%
invenio_stats/receivers.py                                             29     10     16      1    62%
invenio_stats/tasks.py                                                 25     16      4      0    31%
invenio_stats/templates.py                                              6      6      4      0     0%
invenio_stats/utils.py                                                930    826    406      2     9%
invenio_stats/version.py                                                3      0      0      0   100%
invenio_stats/views.py                                                328    248     98      0    24%
-----------------------------------------------------------------------------------------------------
TOTAL                                                                2534   1900    980      7    21%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml

=========================== short test summary info ============================
FAILED tests/test_invenio_stats.py::test_init - werkzeug.utils.ImportStringEr...
ERROR tests/test_aggregations.py::test_BookmarkAPI - ModuleNotFoundError: No ...
ERROR tests/test_aggregations.py::test_wrong_intervals - ModuleNotFoundError:...
ERROR tests/test_aggregations.py::test_StatAggregator - ModuleNotFoundError: ...
ERROR tests/test_cli.py::test_events_process - ModuleNotFoundError: No module...
ERROR tests/test_cli.py::test_events_delete_restore - ModuleNotFoundError: No...
ERROR tests/test_cli.py::test_aggregations_process[indexed_file_download_events0]
ERROR tests/test_cli.py::test_aggregations_delete[aggregated_file_download_events0]
ERROR tests/test_cli.py::test_aggregations_list_bookmarks[aggregated_file_download_events0]
ERROR tests/test_cli.py::test_aggregations_deleteindex_restore - ModuleNotFou...
ERROR tests/test_cli.py::test_partition_create - ModuleNotFoundError: No modu...
ERROR tests/test_event_builders.py::test_celery_task_event_builder - ModuleNo...
ERROR tests/test_event_builders.py::test_file_download_event_builder - Module...
ERROR tests/test_event_builders.py::test_build_celery_task_unique_id - Module...
ERROR tests/test_event_builders.py::test_copy_record_index_list - ModuleNotFo...
ERROR tests/test_event_builders.py::test_copy_user_group_list - ModuleNotFoun...
ERROR tests/test_event_builders.py::test_copy_search_keyword - ModuleNotFound...
ERROR tests/test_event_builders.py::test_copy_search_type - ModuleNotFoundErr...
ERROR tests/test_event_builders.py::test_record_view_event_builder - ModuleNo...
ERROR tests/test_event_builders.py::test_top_view_event_builder - ModuleNotFo...
ERROR tests/test_event_builders.py::test_build_top_unique_id - ModuleNotFound...
ERROR tests/test_event_builders.py::test_build_item_create_unique_id - Module...
ERROR tests/test_event_builders.py::test_resolve_address - ModuleNotFoundErro...
ERROR tests/test_event_builders.py::test_search_event_builder - ModuleNotFoun...
ERROR tests/test_event_builders.py::test_build_search_unique_id - ModuleNotFo...
ERROR tests/test_event_builders.py::test_build_search_detail_condition - Modu...
ERROR tests/test_event_builders.py::test_item_create_event_builder - ModuleNo...
ERROR tests/test_models.py::test_StatsEvents - ModuleNotFoundError: No module...
ERROR tests/test_models.py::test_StatsAggregation - ModuleNotFoundError: No m...
ERROR tests/test_models.py::test_StatsBookmark - ModuleNotFoundError: No modu...
ERROR tests/test_models.py::test_get_stats_events_partition_tables - ModuleNo...
ERROR tests/test_models.py::test_make_stats_events_partition_table - ModuleNo...
ERROR tests/test_processors.py::test_anonymiation_salt - ModuleNotFoundError:...
ERROR tests/test_processors.py::test_events_indexer_preprocessors - ModuleNot...
ERROR tests/test_processors.py::test_events_indexer_id_windowing - ModuleNotF...
ERROR tests/test_processors.py::test_double_clicks - ModuleNotFoundError: No ...
ERROR tests/test_queries.py::test_query - ModuleNotFoundError: No module name...
ERROR tests/test_queries.py::test_date_histogram_query - ModuleNotFoundError:...
ERROR tests/test_queries.py::test_terms_query[mock_execute0-1-tests/data/ESTermsQuery_result01.json-aggregated_file_download_events0]
ERROR tests/test_queries.py::test_terms_query[mock_execute1-1-tests/data/ESTermsQuery_result02.json-aggregated_file_download_events0]
ERROR tests/test_queries.py::test_terms_query[mock_execute2-16-tests/data/ESTermsQuery_result03.json-aggregated_file_download_events0]
ERROR tests/test_queries.py::test_terms_query2 - ModuleNotFoundError: No modu...
ERROR tests/test_queries.py::test_weko_file_stats_query - ModuleNotFoundError...
ERROR tests/test_queries.py::test_weko_terms_query - ModuleNotFoundError: No ...
ERROR tests/test_tasks.py::test_process_events - ModuleNotFoundError: No modu...
ERROR tests/test_utils.py::test_get_anonymization_salt - ModuleNotFoundError:...
ERROR tests/test_utils.py::test_get_user - ModuleNotFoundError: No module nam...
ERROR tests/test_utils.py::test_obj_or_import_string - ModuleNotFoundError: N...
ERROR tests/test_utils.py::test_load_or_import_from_config - ModuleNotFoundEr...
ERROR tests/test_utils.py::test_default_permission_factory - ModuleNotFoundEr...
ERROR tests/test_utils.py::test_get_aggregations - ModuleNotFoundError: No mo...
ERROR tests/test_utils.py::test_get_start_end_date - ModuleNotFoundError: No ...
ERROR tests/test_utils.py::test_agg_bucket_sort - ModuleNotFoundError: No mod...
ERROR tests/test_utils.py::test_parse_bucket_response - ModuleNotFoundError: ...
ERROR tests/test_utils.py::test_get_doctype - ModuleNotFoundError: No module ...
ERROR tests/test_utils.py::test_is_valid_access - ModuleNotFoundError: No mod...
ERROR tests/test_utils.py::test_query_file_reports_helper[aggregated_file_download_events0]
ERROR tests/test_utils.py::test_query_file_reports_helper_error - ModuleNotFo...
ERROR tests/test_utils.py::test_query_search_report_helper - ModuleNotFoundEr...
ERROR tests/test_utils.py::test_query_search_report_helper_error - ModuleNotF...
ERROR tests/test_utils.py::test_query_common_reports_helper - ModuleNotFoundE...
ERROR tests/test_utils.py::test_query_common_reports_helper_error - ModuleNot...
ERROR tests/test_utils.py::test_query_record_view_per_index_report_helper - M...
ERROR tests/test_utils.py::test_query_record_view_per_index_report_helper_error
ERROR tests/test_utils.py::test_query_record_view_report_helper - ModuleNotFo...
ERROR tests/test_utils.py::test_query_record_view_report_helper_error - Modul...
ERROR tests/test_utils.py::test_query_item_reg_report_helper - ModuleNotFound...
ERROR tests/test_utils.py::test_query_item_reg_report_helper_error - ModuleNo...
ERROR tests/test_utils.py::test_query_ranking_helper - ModuleNotFoundError: N...
ERROR tests/test_utils.py::test_query_ranking_helper_error - ModuleNotFoundEr...
ERROR tests/test_utils.py::test_StatsCliUtil - ModuleNotFoundError: No module...
ERROR tests/test_views.py::test_stats_query_resource_guest - ModuleNotFoundEr...
ERROR tests/test_views.py::test_stats_query_resource_com - ModuleNotFoundErro...
ERROR tests/test_views.py::test_stats_query_resource_admin - ModuleNotFoundEr...
ERROR tests/test_views.py::test_stats_query_resource_error - ModuleNotFoundEr...
ERROR tests/test_views.py::test_query_record_view_count - ModuleNotFoundError...
ERROR tests/test_views.py::test_query_record_view_count_error - ModuleNotFoun...
ERROR tests/test_views.py::test_query_file_stats_count - ModuleNotFoundError:...
ERROR tests/test_views.py::test_query_item_reg_report[0-403] - ModuleNotFound...
ERROR tests/test_views.py::test_query_item_reg_report[1-200] - ModuleNotFound...
ERROR tests/test_views.py::test_query_item_reg_report[2-200] - ModuleNotFound...
ERROR tests/test_views.py::test_query_item_reg_report[3-403] - ModuleNotFound...
ERROR tests/test_views.py::test_query_item_reg_report[4-403] - ModuleNotFound...
ERROR tests/test_views.py::test_query_record_view_report[0-403] - ModuleNotFo...
ERROR tests/test_views.py::test_query_record_view_report[1-200] - ModuleNotFo...
ERROR tests/test_views.py::test_query_record_view_report[2-200] - ModuleNotFo...
ERROR tests/test_views.py::test_query_record_view_report[3-403] - ModuleNotFo...
ERROR tests/test_views.py::test_query_record_view_report[4-403] - ModuleNotFo...
ERROR tests/test_views.py::test_query_record_view_per_index_report[0-403] - M...
ERROR tests/test_views.py::test_query_record_view_per_index_report[1-200] - M...
ERROR tests/test_views.py::test_query_record_view_per_index_report[2-200] - M...
ERROR tests/test_views.py::test_query_record_view_per_index_report[3-403] - M...
ERROR tests/test_views.py::test_query_record_view_per_index_report[4-403] - M...
ERROR tests/test_views.py::test_query_file_reports[0-403] - ModuleNotFoundErr...
ERROR tests/test_views.py::test_query_file_reports[1-200] - ModuleNotFoundErr...
ERROR tests/test_views.py::test_query_file_reports[2-200] - ModuleNotFoundErr...
ERROR tests/test_views.py::test_query_file_reports[3-403] - ModuleNotFoundErr...
ERROR tests/test_views.py::test_query_file_reports[4-403] - ModuleNotFoundErr...
ERROR tests/test_views.py::test_query_common_reports - ModuleNotFoundError: N...
ERROR tests/test_views.py::test_query_celery_task_report[0-403] - ModuleNotFo...
ERROR tests/test_views.py::test_query_celery_task_report[1-200] - ModuleNotFo...
ERROR tests/test_views.py::test_query_celery_task_report[2-200] - ModuleNotFo...
ERROR tests/test_views.py::test_query_celery_task_report[3-403] - ModuleNotFo...
ERROR tests/test_views.py::test_query_celery_task_report[4-403] - ModuleNotFo...
ERROR tests/test_views.py::test_query_search_report[0-403] - ModuleNotFoundEr...
ERROR tests/test_views.py::test_query_search_report[1-200] - ModuleNotFoundEr...
ERROR tests/test_views.py::test_query_search_report[2-200] - ModuleNotFoundEr...
ERROR tests/test_views.py::test_query_search_report[3-403] - ModuleNotFoundEr...
ERROR tests/test_views.py::test_query_search_report[4-403] - ModuleNotFoundEr...
ERROR tests/test_views.py::test_dbsession_clean - ModuleNotFoundError: No mod...
== 1 failed, 14 passed, 5 skipped, 2 warnings, 109 errors in 70.41s (0:01:10) ==
ERROR: InvocationError for command /code/modules/invenio-stats/.tox/c1/bin/pytest --cov=invenio_stats tests -v -vv --cov-branch --cov-report=term --cov-report=xml --cov-report=html --cov-config=tox.ini --basetemp=/code/modules/invenio-stats/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
